{"id":475480214,"question_id":474,"lang":"python3","lang_name":"Python3","time":"3 years, 11 months","timestamp":1617362066,"status":10,"status_display":"Accepted","runtime":"2648 ms","url":"/submissions/detail/475480214/","is_pending":"Not Pending","title":"Ones and Zeroes","memory":"295.9 MB","code":"from collections import defaultdict\nclass Solution:\n    def findMaxForm(self, strs: List[str], m: int, n: int) -> int:\n        \n        #calculate ones and zeros in strs[i]\n        arr0 = [strs[i].count('0') for i in range(len(strs))]\n        arr1 = [strs[i].count('1') for i in range(len(strs))]\n        memo = defaultdict(int)\n        def max_count(i, zeros, ones):\n            nonlocal m,n\n            if i == len(strs):\n                return 0\n            temp = (i, zeros, ones)\n            if temp in memo:\n                return memo[temp]\n            diff_0 = zeros - arr0[i]\n            diff_1 = ones - arr1[i]\n            if diff_0 >= 0 and diff_1 >= 0:\n                memo[temp] = max(1 + max_count(i+1, diff_0, diff_1), max_count(i+1, zeros, ones))\n            else:\n                memo[temp] = max_count(i+1, zeros, ones)\n            return memo[temp]\n        return max_count(0, m, n)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"ones-and-zeroes","has_notes":false,"flag_type":1}