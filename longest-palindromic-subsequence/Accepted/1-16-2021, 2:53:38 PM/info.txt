{"id":443614739,"question_id":516,"lang":"python3","lang_name":"Python3","time":"4 years, 1 month","timestamp":1610789018,"status":10,"status_display":"Accepted","runtime":"1216 ms","url":"/submissions/detail/443614739/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"72.3 MB","code":"class Solution:\n    def longestPalindromeSubseq(self, s: str) -> int:\n        dp = [[-1 for i in range(len(s)+2) ] for j in range(len(s)+2)]\n        def lps(s, i, j):\n            if dp[i][j] != -1:\n                return dp[i][j]\n            if i > j:\n                return 0\n            if i == j:\n                return 1\n            if s[i] == s[j]:\n                dp[i][j] = 2 + lps(s, i+1, j-1)\n            else:\n                dp[i][j] = max(lps(s, i, j-1), lps(s, i+1, j))\n            return dp[i][j]\n        return lps(s,0,len(s)-1)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence","has_notes":false,"flag_type":1}