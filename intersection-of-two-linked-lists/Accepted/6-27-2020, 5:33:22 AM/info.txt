{"id":358774529,"question_id":160,"lang":"python3","lang_name":"Python3","time":"4 years, 8 months","timestamp":1593216202,"status":10,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/358774529/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"29.1 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def getLength(self, a):\n        len_a = 0\n        temp = a\n        while temp:\n            len_a += 1\n            temp = temp.next\n        return len_a\n    def getIntersectionNode(self, a: ListNode, b: ListNode) -> ListNode:\n        if not a or not b:\n            return\n        len_a = self.getLength(a)\n        len_b = self.getLength(b)\n        if len_a > len_b:\n            a,b = b, a\n        for i in range(abs(len_b - len_a)):\n            b = b.next\n        while a and b:\n            if a == b:\n                return a\n            a = a.next \n            b = b.next","compare_result":"111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false,"flag_type":1}