{"id":476370966,"question_id":560,"lang":"python3","lang_name":"Python3","time":"3Â years, 10Â months","timestamp":1617545711,"status":10,"status_display":"Accepted","runtime":"5592 ms","url":"/submissions/detail/476370966/","is_pending":"Not Pending","title":"Subarray Sum Equals K","memory":"22 MB","code":"from collections import defaultdict\nclass Solution:\n    def subarraySum(self, nums: List[int], k: int) -> int:\n        pre_sum = [0]*(len(nums)+1)\n        sum_freq = defaultdict(list)\n        sum_freq[0] = [0]\n        \n        for i in range(1, len(nums)+1):\n            pre_sum[i] = pre_sum[i-1] + nums[i-1]\n            sum_freq[pre_sum[i]].append(i)\n        res_count = 0\n        # print(sum_freq)\n        # print(pre_sum)\n        for i in range(1,len(nums)+1):\n            # print(i, k - pre_sum[i])\n            for j in sum_freq[pre_sum[i] - k]: # 0 -1 -2 -1\n                if j < i:\n                    res_count += 1\n                else:\n                    break\n        return res_count","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sum-equals-k","has_notes":false,"flag_type":1}