{"id":508386014,"question_id":1474,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1623778740,"status":10,"status_display":"Accepted","runtime":"420 ms","url":"/submissions/detail/508386014/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"65.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def longestZigZag(self, root: TreeNode) -> int:\n        maxx = 0\n        def helper(root):\n            nonlocal maxx\n            if not root:\n                return [0,0]\n            maxL, maxR = 0, 0\n            if root.left:\n                l, r = helper(root.left)\n                maxL = r+1\n            if root.right:\n                l, r = helper(root.right)\n                maxR = 1+l\n            maxx = max(maxx, maxL, maxR)\n            return [maxL, maxR]\n        helper(root)\n        return maxx","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false,"flag_type":1}