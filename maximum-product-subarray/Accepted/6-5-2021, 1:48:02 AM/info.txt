{"id":503071271,"question_id":152,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1622837882,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/503071271/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"14.3 MB","code":"class Solution:\n    def maxProduct(self, nums):\n        max_inc_cur = nums[0]\n        min_inc_cur = nums[0]\n        ultimate_max = nums[0]\n        #intutively I have to used cur_max n cur_min to find the new cur_max n cur_min bcoz\n        # the nums[i] < 0\n        for i in range(1, len(nums)):\n            using_max = nums[i]*max_inc_cur\n            using_min = nums[i]*min_inc_cur\n            max_inc_cur = max(nums[i], using_max, using_min)\n            min_inc_cur = min(nums[i], using_min, using_max)\n            ultimate_max = max(max_inc_cur, ultimate_max, using_min)\n        return ultimate_max","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray","has_notes":false,"flag_type":1}