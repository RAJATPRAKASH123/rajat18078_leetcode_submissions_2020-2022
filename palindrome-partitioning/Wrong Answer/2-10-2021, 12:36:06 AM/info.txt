{"id":454131023,"question_id":131,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1612897566,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/454131023/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"N/A","code":"class Solution:\n    def partition(self, s: str) -> List[List[str]]:\n        n = len(s)\n        def is_pal(i, j):\n            if i == j:\n                return True\n            temp = s[i:j+1]\n            if  temp == temp[::-1]:\n                return True\n            \n            return False\n        def helper(i):\n            if i == n:\n                return []\n            ans = []\n            for k in range(i, n):\n                if is_pal(i, k ):\n                    ans += [[i, k]] + helper(k+1)\n            return ans\n        papa = helper(0)\n        res = []\n        temp = []\n        for i in papa:\n            if i[1] != n-1:\n                temp += [s[i[0]:i[1]+1]]\n            else:\n                res.append(temp + [s[i[0]:i[1]+1]])\n                temp = []\n        return res","compare_result":"11110110001000000100000000000000","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}