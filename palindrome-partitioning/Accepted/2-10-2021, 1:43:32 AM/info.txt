{"id":454152002,"question_id":131,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1612901612,"status":10,"status_display":"Accepted","runtime":"776 ms","url":"/submissions/detail/454152002/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"45.1 MB","code":"class Solution:\n    def partition(self, s: str) -> List[List[str]]:\n        n = len(s)\n        def is_pal(i, j):\n            if i == j:\n                return True\n            temp = s[i:j+1]\n            if  temp == temp[::-1]:\n                return True\n            \n            return False\n        \n        def helper(i, ans=[]):\n            nonlocal res\n            if i == n:\n                res.append(ans)\n                return\n            \n            for k in range(i, n):\n                # print(i, k)\n                # if i == n:\n                #     helper(k+1, ans + [i, i])\n                if is_pal(i, k ):\n                    helper(k+1, ans + [[i, k]] )\n            return ans\n        res = []\n        papa = helper(0)\n        fin_strings = []\n        for i in res:\n            temp = []\n            for j in i:\n                \n                temp.append(s[j[0]:j[1]+1])\n            fin_strings.append(temp)\n        return fin_strings","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}