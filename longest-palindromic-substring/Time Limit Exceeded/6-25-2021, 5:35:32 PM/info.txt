{"id":512992314,"question_id":5,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1624622732,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/512992314/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n          \n          # Recursive Solution\n#         n = len(s)\n#         dp = [[-1 for j in range(n)] for i in range(n)]\n#         start, end = 0, 0\n#         def lps(i, j):\n#             if dp[i][j] != -1:\n#                 return dp[i][j]\n#             nonlocal start, end\n#             if i == j:\n#                 dp[i][j] = True\n#                 return True\n#             if i + 1 == j:\n#                 if s[i] == s[j] and (j-i > end - start):\n#                     start = i ; end = j\n#                     dp[i][j] = True\n#                 return s[i] == s[j]\n#             if s[i] == s[j] and lps(i+1, j-1):\n#                 if (j-i > end - start):\n#                     start = i ; end = j\n#                 dp[i][j] = True\n#                 return True    \n#             lps(i+1, j)\n#             lps(i, j-1)\n#             dp[i][j] = False\n            \n#         lps(0, len(s)-1)\n#         return s[start:end+1]\n        n = len(s)\n        dp = [[False for i in range(n)] for j in range(n)]\n        start, end = 0, 0\n        for j in range(n):\n            for i in range(j,-1, -1):\n                if j - i <= 1:\n                    dp[i][j] = s[i] == s[j]\n                else:\n                    dp[i][j] = s[i] == s[j] and dp[i+1][j-1]\n                if dp[i][j] and end - start < j - i:\n                    start, end = i, j\n        return s[start:end+1]\n                    \n'''\ns : return longest palindromic substring\n\nfor each i , I will check update max using two types of palindromes\n1. odd length\n2. even length\n\n\"babad\"\n\n'''","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}