{"id":448501296,"question_id":5,"lang":"python3","lang_name":"Python3","time":"4 years, 1 month","timestamp":1611751519,"status":10,"status_display":"Accepted","runtime":"984 ms","url":"/submissions/detail/448501296/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"14.3 MB","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        l = len(s)\n        tmp = \"\"\n        def helper(s, l, r):\n            while l >= 0 and r < len(s) and s[l] == s[r]:\n                l -= 1\n                r += 1\n            return s[l+1:r]\n        for i in range(l):\n            sp = helper(s, i, i )\n            spp = helper(s, i, i+1 )\n            if len(sp)>len(tmp):\n                tmp = sp\n            if len(spp)>len(tmp):\n                tmp = spp\n            # print(i, tmp)\n        return tmp","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}