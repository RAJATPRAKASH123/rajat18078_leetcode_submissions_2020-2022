{"id":358784485,"question_id":234,"lang":"python3","lang_name":"Python3","time":"4 years, 8 months","timestamp":1593219059,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/358784485/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def getLength(self, ll):\n        count = 0\n        temp = ll\n        while temp:\n            temp = temp.next\n            count += 1\n        return count\n    def isPalindrome(self, head: ListNode) -> bool:\n        half_len_ll = self.getLength(head)//2\n        mid = head\n        while half_len_ll > 0:\n            mid = mid.next\n            half_len_ll -= 1\n        def helper(left, mid, half_len_ll):\n            if half_len_ll == 0:\n                return True\n            print(left.val)\n            between_them = helper(left.next, mid.next, half_len_ll - 1)\n            print(mid.val)\n            return between_them and left.val == mid.val\n        return helper(head, mid, half_len_ll)","compare_result":"01111010110000001010010010","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}