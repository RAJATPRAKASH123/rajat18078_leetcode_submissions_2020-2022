{"id":475402944,"question_id":234,"lang":"python3","lang_name":"Python3","time":"3 years, 11 months","timestamp":1617344520,"status":10,"status_display":"Accepted","runtime":"780 ms","url":"/submissions/detail/475402944/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"39.3 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def isPalindrome(self, head: ListNode) -> bool:\n        if not head:\n            return True\n        if not head.next:\n            return True\n        temp = head\n        nodes = 0\n        while temp:\n            temp = temp.next\n            nodes += 1\n        cur = head\n        for i in range(nodes//2):\n            cur = cur.next\n        if nodes % 2 == 1:\n            cur = cur.next\n        \n        # reversing the half linked list\n        prev = None\n        next_node = None\n        while cur:\n            next_node = cur.next\n            cur.next = prev\n            prev = cur\n            cur = next_node\n        \n        temp_sec = prev\n        temp_fir = head\n        while temp_sec:\n            if temp_fir.val != temp_sec.val:\n                return False\n            temp_fir = temp_fir.next\n            temp_sec = temp_sec.next\n        return True","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}