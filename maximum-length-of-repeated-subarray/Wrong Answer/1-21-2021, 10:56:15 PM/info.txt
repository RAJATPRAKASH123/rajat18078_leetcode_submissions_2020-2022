{"id":445968330,"question_id":718,"lang":"python3","lang_name":"Python3","time":"4 years, 1 month","timestamp":1611249975,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/445968330/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"N/A","code":"class Solution:\n    def findLength(self, s: List[int], t: List[int]) -> int:\n        \n        def helper(s, t, i, j):\n            if i == -1 or j == -1:\n                return 0\n            temp = 0\n            if s[i] == t[j]:\n                follow_up = helper(s, t, i-1, j-1)\n                if i > 0 and j > 0 and s[i-1] != t[j-1]:\n                    follow_up = 0\n                temp = max(temp, 1 + follow_up, helper(s, t, i-1, j), helper(s, t, i, j-1))    \n            else:\n                temp = max(temp, helper(s, t, i-1, j), helper(s, t, i, j-1))\n            \n            return temp\n        return helper(s, t, len(s)-1, len(t)-1)","compare_result":"111101111111111000001111100000000000000000000000000000","title_slug":"maximum-length-of-repeated-subarray","has_notes":false,"flag_type":1}