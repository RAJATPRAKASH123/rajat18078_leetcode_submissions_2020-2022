{"id":445988131,"question_id":718,"lang":"python3","lang_name":"Python3","time":"4 years, 1 month","timestamp":1611253568,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/445988131/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"N/A","code":"class Solution:\n    def findLength(self, s: List[int], t: List[int]) -> int:\n        temp = float('-inf')\n        def helper(s, t, i, j, count):\n            nonlocal temp\n            temp = max(temp, count)\n            if i == -1 or j == -1:\n                return 0\n            \n            if s[i] == t[j]:\n                helper(s, t, i-1, j-1, count + 1) \n            helper(s, t, i-1, j, 0)\n            helper(s, t, i, j-1, 0)\n            \n        \n        helper(s, t, len(s)-1, len(t)-1, 0)\n        return temp","compare_result":"111111111111111111111111100000000000000000000000000000","title_slug":"maximum-length-of-repeated-subarray","has_notes":false,"flag_type":1}