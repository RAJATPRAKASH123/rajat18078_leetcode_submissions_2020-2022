{"id":448569466,"question_id":718,"lang":"python3","lang_name":"Python3","time":"4 years, 1 month","timestamp":1611765631,"status":10,"status_display":"Accepted","runtime":"5840 ms","url":"/submissions/detail/448569466/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"40.3 MB","code":"class Solution:\n    def findLength(self, s: List[int], t: List[int]) -> int:\n        \n        ls, lt = len(s), len(t)\n        dp = [[0 for i in range(len(s)+1)] for j in range(len(t)+1)]\n        temp = 0\n        for i in range(1,ls+1):\n            for j in range(1,lt+1):\n                if s[i-1] == t[j-1]:\n                    dp[i][j] = dp[i-1][j-1] + 1\n                temp = max(dp[i][j], temp)\n        return temp\n    \n'''\n  2 3 1\n1 0 0 1\n2 1 0 0\n3 0 1 0   \n\n\n'''","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray","has_notes":false,"flag_type":1}