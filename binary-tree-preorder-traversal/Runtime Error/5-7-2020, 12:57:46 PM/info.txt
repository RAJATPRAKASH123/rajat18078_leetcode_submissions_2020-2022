{"id":335653173,"question_id":144,"lang":"python3","lang_name":"Python3","time":"4 years, 9 months","timestamp":1588836466,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/335653173/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def preorderTraversal(self, root: TreeNode) -> List[int]:\n        # arr=[]\n        # def helper(root):\n        #     nonlocal arr\n        #     if root:\n        #         arr.append(root.val)\n        #         helper(root.left)\n        #         helper(root.right)\n        # helper(root)\n        # return arr\n        arr=[]\n        queue=[root]\n        while queue:\n            node = queue.pop(0)\n            arr.append(node.val)\n            if node.left:\n                queue = [node.left]+queue\n            if node.right:\n                queue = [node.right]+queue\n        return arr\n                ","compare_result":"10000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}