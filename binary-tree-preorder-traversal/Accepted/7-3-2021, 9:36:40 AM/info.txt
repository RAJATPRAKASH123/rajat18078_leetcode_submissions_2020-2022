{"id":516588867,"question_id":144,"lang":"python3","lang_name":"Python3","time":"3 years, 7 months","timestamp":1625285200,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/516588867/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"14.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def preorderTraversal(self, root: TreeNode) -> List[int]:\n        if not root:\n            return []\n        stack = [root]\n        preorder = []\n        while True:\n            while root:\n                if not stack:\n                    return preorder\n                root = stack.pop()\n                preorder.append(root.val)\n                if root.right:\n                    stack.append(root.right)\n                if root.left:\n                    stack.append(root.left)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}