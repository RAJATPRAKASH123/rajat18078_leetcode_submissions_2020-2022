{"id":335660451,"question_id":144,"lang":"python3","lang_name":"Python3","time":"4 years, 9 months","timestamp":1588837628,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/335660451/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"13.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def preorderTraversal(self, root: TreeNode) -> List[int]:\n        # arr=[]\n        # def helper(root):\n        #     nonlocal arr\n        #     if root:\n        #         arr.append(root.val)\n        #         helper(root.left)\n        #         helper(root.right)\n        # helper(root)\n        # return arr\n        if not root:\n            return []\n        arr=[]\n        stack=[root]\n        while stack:\n            node = stack.pop()\n            arr.append(node.val)\n            if node.right:\n                stack.append(node.right)\n            if node.left:\n                stack.append(node.left)\n        return arr\n                ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}