{"id":470072222,"question_id":1072,"lang":"python3","lang_name":"Python3","time":"3 years, 11 months","timestamp":1616227874,"status":10,"status_display":"Accepted","runtime":"352 ms","url":"/submissions/detail/470072222/","is_pending":"Not Pending","title":"Next Greater Node In Linked List","memory":"16.8 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def nextLargerNodes(self, head: ListNode) -> List[int]:\n        \n        prev = None\n        cur = head\n        nxt = None\n        while cur:\n            nxt = cur.next\n            cur.next = prev\n            prev = cur\n            cur = nxt\n\n        # head of reversed linkedlist : rev\n        rev = prev\n        stack = deque([float('inf')]); res = deque()\n        while rev:\n            while stack:\n                if stack[0] <= rev.val:\n                    stack.popleft()\n                else:\n                    if stack[0] == float('inf'):\n                        res.appendleft(0)\n                    else:\n                        res.appendleft(stack[0])\n                    stack.appendleft(rev.val)\n                    break\n            \n            rev = rev.next\n        return res\n'''\n2 1 5\n\n\n\n'''","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-greater-node-in-linked-list","has_notes":false,"flag_type":1}