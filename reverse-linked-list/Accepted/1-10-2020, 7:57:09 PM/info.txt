{"id":292961392,"question_id":206,"lang":"java","lang_name":"Java","time":"5 years, 1 month","timestamp":1578666429,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/292961392/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"37.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        // if ( head == null )\n        // {\n        //     return null;\n        // }\n        // if ( head.next == null )\n        // {\n        //     return head;\n        // }\n        // ListNode prev = null;\n        // ListNode cur = head;\n        // ListNode next = null;\n        // while ( cur != null )\n        // {\n        //     next = cur.next;\n        //     cur.next = prev;\n        //     prev = cur;\n        //     cur = next; \n        // }\n        // head = prev;\n        // return head;\n        if ( head == null || head.next == null )\n        {\n            return head;\n        }\n        ListNode p = reverseList(head.next);\n        head.next.next = head;\n        head.next = null;\n        return p;   \n    }\n}","compare_result":"111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}