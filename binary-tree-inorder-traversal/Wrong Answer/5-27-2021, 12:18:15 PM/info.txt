{"id":498885939,"question_id":94,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1622098095,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/498885939/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def inorderTraversal(self, root: TreeNode) -> List[int]:\n        if not root:\n            return []\n        stack = [root]\n        res_inorder = []\n        while stack:\n            while root.left:\n                stack.append(root.left)\n                root = root.left\n            # print([i.val for i in stack])\n            root = stack.pop()\n            res_inorder.append(root.val)\n            while not root.right and stack:\n                root = stack.pop()\n                res_inorder.append(root.val)\n                \n\n        return res_inorder","compare_result":"01110100001000000000000010000000000000000000000000000000000000000000","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}