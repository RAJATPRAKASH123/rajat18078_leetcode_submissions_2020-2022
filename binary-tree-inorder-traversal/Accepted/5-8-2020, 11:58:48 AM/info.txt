{"id":336100913,"question_id":94,"lang":"python3","lang_name":"Python3","time":"4 years, 9 months","timestamp":1588919328,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/336100913/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"13.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def inorderTraversal(self, root: TreeNode) -> List[int]:\n        if not root:\n            return []\n        arr=[]\n        stack=[]\n        while True:\n            while root:\n                stack.append(root)\n                root = root.left\n            if not stack:\n                return arr\n            node = stack.pop()\n            arr.append(node.val)\n            if node.right:\n                root = node.right","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}