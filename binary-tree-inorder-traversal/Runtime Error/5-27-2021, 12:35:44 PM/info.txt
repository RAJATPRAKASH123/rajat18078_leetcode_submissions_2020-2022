{"id":498892114,"question_id":94,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1622099144,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/498892114/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def inorderTraversal(self, root: TreeNode) -> List[int]:\n        \n        stack = []\n        res = []\n        while True:\n            while root:\n                stack.append(root)\n                root = root.left\n            if not stack:\n                return res\n            node = stack.pop()\n            res.append(node.val)\n            if node.right:\n                root = root.right\n        \n        return res","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}