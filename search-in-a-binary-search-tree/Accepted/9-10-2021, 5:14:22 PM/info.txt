{"id":552563476,"question_id":783,"lang":"python3","lang_name":"Python3","time":"3 years, 5 months","timestamp":1631274262,"status":10,"status_display":"Accepted","runtime":"93 ms","url":"/submissions/detail/552563476/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def searchBST(self, root: Optional[TreeNode], val: int) -> Optional[TreeNode]:\n        \n        def helper(root, val):\n            if not root:\n                return\n            if root.val == val:\n                return root\n            if root.val > val:\n                return helper(root.left, val)\n            return helper(root.right, val)\n        return helper(root, val)","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}