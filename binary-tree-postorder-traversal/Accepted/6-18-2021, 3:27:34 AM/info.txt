{"id":509435910,"question_id":145,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1623967054,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/509435910/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"14.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def postorderTraversal(self, root: TreeNode) -> List[int]:\n        if not root:\n            return []\n        ret = []\n        stack = [root]\n        while stack:\n            node = stack.pop()\n            if node:\n                ret.append(node.val)\n                stack.append(node.left)\n                stack.append(node.right)\n        return ret[::-1]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}