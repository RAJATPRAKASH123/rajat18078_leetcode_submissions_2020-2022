{"id":498915231,"question_id":145,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1622103367,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/498915231/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def postorderTraversal(self, root: TreeNode) -> List[int]:\n        if not root:\n            return []\n        res = []\n        stack = [root]\n        while stack:\n            if root:\n                res.append(root.val)\n                stack.pop()\n                \n            if root.right:\n                stack.append(root.right)\n            if root.left:\n                stack.append(root.left)\n            if stack:\n                root = stack[-1]\n            else:\n                return res[::-1]\n            ","compare_result":"11111101111001001011011110001000001001000001001001011001001011011100","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}