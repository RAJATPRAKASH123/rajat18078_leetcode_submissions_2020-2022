{"id":452119257,"question_id":871,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1612479826,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/452119257/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"15.2 MB","code":"class Solution:\n    def canVisitAllRooms(self, rooms: List[List[int]]) -> bool:\n        total = len(rooms)\n        def dfs( i,  visited ):\n            if visited[i]:\n                return\n            visited[i] = True\n            for neighbour in rooms[i]:\n                if visited[neighbour] != True:\n                    dfs(neighbour, visited)\n        visited = [False for i in range(total)]\n        dfs(0, visited)\n        return visited.count(False) == 0\n        \n'''\nn rooms\nstart : 0\n\n0, 1, 2, 3, 4, 5,... ,n - 1\nrooms[i]: list of keys\nrooms[i][j] is 0, 1, ... n -1\n\n[0 : [1,3],\n 1 : [3,0,1]\n 2 : [2]\n 3 : [0]]\n'''","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms","has_notes":false,"flag_type":1}