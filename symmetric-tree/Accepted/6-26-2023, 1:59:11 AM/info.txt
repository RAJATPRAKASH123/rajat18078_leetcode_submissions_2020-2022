{"id":979561672,"question_id":101,"lang":"python3","lang_name":"Python3","time":"1 year, 8 months","timestamp":1687724951,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/979561672/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: Optional[TreeNode]) -> bool:\n        def helper(p, q):\n            if not p and not q:\n                return True\n            elif p and q:\n                if p.val == q.val:\n                    return helper(p.left, q.right) and helper(p.right, q.left)\n                else:\n                    return False\n            elif p or q:\n                return False\n        return helper(root.left, root.right)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}