{"id":495886753,"question_id":101,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1621533137,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/495886753/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"14.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: TreeNode) -> bool:\n        \n        def helper(l, r):\n            # print(l.val, r.val)\n            if not l and not r:\n                return True\n            if (l and not r ) or (r and not l ):\n                return False\n            return l.val == r.val and helper(l.left, r.right) and helper(l.right, r.left)\n        return helper(root.left, root.right)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}