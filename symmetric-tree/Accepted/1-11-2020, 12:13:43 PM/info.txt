{"id":293148038,"question_id":101,"lang":"java","lang_name":"Java","time":"5 years, 1 month","timestamp":1578725023,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/293148038/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"40.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        return helpMe(root, root);\n    }\n    public boolean helpMe(TreeNode t1, TreeNode t2 )\n    {\n        if ( t1 == null && t2 == null ){return true;}\n        if ( t1 == null || t2 == null ){return false;}\n        return t1.val == t2.val && helpMe(t1.left, t2.right) && helpMe(t1.right, t2.left);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}