{"id":498455189,"question_id":40,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1622017067,"status":10,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/498455189/","is_pending":"Not Pending","title":"Combination Sum II","memory":"14.6 MB","code":"class Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n        candidates.sort()\n        res = set()\n        def helper(i, target, res_indices=[]):\n            if target == 0:\n                res.add(tuple([candidates[idx] for idx in res_indices]))\n                return\n            if i == len(candidates) or target < 0:\n                return\n            for nxt in range(i, len(candidates)):\n                if nxt > i and candidates[nxt] == candidates[nxt-1]:\n                    continue\n                helper(nxt+1, target-candidates[nxt], res_indices + [nxt])\n            \n        helper(0, target)\n        return list(res)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum-ii","has_notes":false,"flag_type":1}