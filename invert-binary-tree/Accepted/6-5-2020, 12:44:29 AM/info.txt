{"id":349057581,"question_id":226,"lang":"python3","lang_name":"Python3","time":"4 years, 8 months","timestamp":1591298069,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/349057581/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"13.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def invertTree(self, root: TreeNode) -> TreeNode:\n        if root:\n            root.left, root.right = root.right, root.left\n            self.invertTree(root.left)\n            self.invertTree(root.right)\n            return root","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}