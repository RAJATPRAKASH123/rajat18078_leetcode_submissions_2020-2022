{"id":500955478,"question_id":338,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1622483585,"status":10,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/500955478/","is_pending":"Not Pending","title":"Counting Bits","memory":"20.8 MB","code":"class Solution:\n    def countBits(self, n: int) -> List[int]:\n        \n        # But, let's first try O(nlogn), nahhh its easy\n        res = [0]*(n+1)\n        \n        # This question is not straightforward : I saw the soln\n        # Here, we need to check the least significant bit\n        for i in range(1, n+1):\n            res[i] = res[i & (i-1)] + 1\n        return res\n                 \n        # So, we have to count no. of bits in O(n) and single pass\n        \n'''\n0    : i\n1    : i & (i-1) = 0\n10   : 0\n11   : \n100  :\n101  :\n110\n111\n1000\n'''","compare_result":"111111111111111","title_slug":"counting-bits","has_notes":false,"flag_type":1}