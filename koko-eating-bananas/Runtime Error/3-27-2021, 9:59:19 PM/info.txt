{"id":473076135,"question_id":907,"lang":"python3","lang_name":"Python3","time":"3 years, 11 months","timestamp":1616862559,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/473076135/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"N/A","code":"import math\nclass Solution:\n    def minEatingSpeed(self, piles: List[int], h: int) -> int:\n        \n        piles.sort()\n        low, high = 0, piles[-1]\n        res = -1\n        \n        def checkAt(cur):\n            nonlocal h\n            hours = 0\n            for i in range(len(piles)):\n                hours += math.ceil(piles[i]/cur)\n            if hours <= h:\n                return True\n        \n        while low <= high:\n            cur = (low + high)//2\n            # print(low, high, cur)\n            if checkAt(cur):\n                high = cur - 1\n                res = cur\n            else:\n                low = cur + 1\n        return res\n        \n'''\nn piles of bananas\n\nith : piles[i]\nguards come back in h hours\n\nk : bananas per hour eating speed\n\n\n'''","compare_result":"1111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"koko-eating-bananas","has_notes":false,"flag_type":1}