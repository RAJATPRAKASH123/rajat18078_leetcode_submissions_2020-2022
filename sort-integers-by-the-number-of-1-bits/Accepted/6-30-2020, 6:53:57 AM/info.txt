{"id":360043032,"question_id":1458,"lang":"python3","lang_name":"Python3","time":"4 years, 8 months","timestamp":1593480237,"status":10,"status_display":"Accepted","runtime":"188 ms","url":"/submissions/detail/360043032/","is_pending":"Not Pending","title":"Sort Integers by The Number of 1 Bits","memory":"14.1 MB","code":"class Solution:\n    def count_1s(self, n):\n        ans = 0\n        for i in range(15):\n            if n & 1 << i != 0:\n                ans += 1\n        return ans\n    def merge(self, arr,c,  l, r, m):\n        i, j = l, m+1\n        temp_arr, temp_c = [], []\n        while i < m+1 and j < r+1:\n            if c[i] < c[j] or (c[i] == c[j] and arr[i] < arr[j]):\n                temp_arr.append(arr[i])\n                temp_c.append(c[i])\n                i += 1\n            else:\n                temp_arr.append(arr[j])\n                temp_c.append(c[j])\n                j += 1\n        temp_arr.extend(arr[i:m+1] + arr[j:r+1])\n        temp_c.extend(c[i:m+1] + c[j:r+1])\n        arr[l:r+1] = temp_arr[:r-l+1]\n        c[l:r+1] = temp_c[:r-l+1]\n            \n    def mergeSort(self,arr, c, l, r):\n        if l < r:\n            m = (l + r)//2\n            self.mergeSort(arr, c, l, m)\n            self.mergeSort(arr, c, m+1, r )\n            self.merge(arr, c, l, r, m)\n            return arr\n    def sortByBits(self, arr: List[int]) -> List[int]:\n        c = [self.count_1s(i) for i in arr]\n        return self.mergeSort(arr, c, 0, len(arr) - 1)\n\n'''\n    def sortByBits(self, A):\n        return sorted(A, key=lambda a: [bin(a).count('1'), a])\n'''\n'''\n\nclass Solution(object):\n    def sortByBits(self, arr):\n        res = []\n        for num in arr:\n            ones = self.countBits(num)\n            res.append((ones, num))\n        heapq.heapify(res)\n        finalres = []\n        while len(res)>0:\n            finalres.append(heappop(res)[1])\n        return finalres\n    \n    def countBits(self, n):\n        count = 0\n        while n:\n            n = n & (n-1)\n            count += 1\n            n >>= 1\n        return count\n'''","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-integers-by-the-number-of-1-bits","has_notes":false,"flag_type":1}