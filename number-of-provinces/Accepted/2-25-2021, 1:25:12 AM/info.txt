{"id":460238182,"question_id":547,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1614196512,"status":10,"status_display":"Accepted","runtime":"328 ms","url":"/submissions/detail/460238182/","is_pending":"Not Pending","title":"Number of Provinces","memory":"14.7 MB","code":"class Solution:\n    def findCircleNum(self, isConnected: List[List[int]]) -> int:\n        cities = len(isConnected)\n        parent = [i for i in range(cities)]\n        \n        def find(i):\n            while i != parent[i]:\n                i = parent[i]\n            return i\n        \n        def union(p_i, p_j):\n            parent[p_i] = p_j\n        \n        # i, j are cities directly connected if isConnected[i][j] = 1\n        for i in range(cities):\n            for j in range(cities):\n                if isConnected[i][j]:\n                    p_i = find(i)\n                    p_j = find(j)\n                    if p_i != p_j:\n                        union(p_i, p_j)\n        count = 0\n        for i in range(cities):\n            if i == parent[i]:\n                count += 1\n        return count\n''' \nn cities : \n'''","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}