{"id":361388142,"question_id":107,"lang":"python3","lang_name":"Python3","time":"4 years, 7 months","timestamp":1593749346,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/361388142/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"14 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrderBottom(self, root: TreeNode) -> List[List[int]]:\n        if not root:\n            return[]\n        queue = [root]\n        arr = [[root.val]]\n        while queue:\n            temp = []\n            while queue:\n                node = queue.pop(0)\n                if node.left:\n                    temp.append(node.left)\n                if node.right:\n                    temp.append(node.right)\n            if temp:\n                arr.append([node.val for node in temp])\n            queue = temp\n        return arr[::-1]","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii","has_notes":false,"flag_type":1}