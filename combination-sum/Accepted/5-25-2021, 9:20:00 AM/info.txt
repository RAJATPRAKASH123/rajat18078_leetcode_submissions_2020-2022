{"id":497884723,"question_id":39,"lang":"python3","lang_name":"Python3","time":"3Â years, 9Â months","timestamp":1621914600,"status":10,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/497884723/","is_pending":"Not Pending","title":"Combination Sum","memory":"14.5 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        candidates.sort()\n        res = set()\n        def helper(i, target, res_indices=[]):\n            #base cases\n            if target == 0:\n                res.add(tuple([candidates[int(idx)] for idx in res_indices ]))\n                return\n            if target < 0 or i >= len(candidates):\n                return\n            #recursive\n            helper(i, target-candidates[i], (res_indices + [str(i)]) )\n            helper(i+1, target, res_indices)\n        helper(0, target)\n        return list(res)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}