{"id":1062021831,"question_id":39,"lang":"python3","lang_name":"Python3","time":"1 year, 5 months","timestamp":1695967763,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/1062021831/","is_pending":"Not Pending","title":"Combination Sum","memory":"16.3 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        res = []\n        def helper(cur_i = 0, cur = target, includedCands = []):\n            if cur == 0:\n                res.append(includedCands)\n                return\n            if cur < 0 or cur_i >= len(candidates):\n                return\n            for i in range(cur_i, len(candidates)):\n                helper( i, cur - candidates[i], includedCands + [candidates[i]])\n        helper()\n        return res\n'''\ncandidates\ntarget\nreturn unique combinations\n'''","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}