{"id":594421909,"question_id":108,"lang":"python3","lang_name":"Python3","time":"3 years, 2 months","timestamp":1638189534,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/594421909/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"15.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def sortedArrayToBST(self, ino: List[int]) -> Optional[TreeNode]:\n        \n        def createBST(nums):\n            if not nums:\n                return\n            if len(nums) == 1:\n                return TreeNode(nums[0])\n            \n            mid = len(nums)//2\n            cur_node = TreeNode(nums[mid])\n            \n            cur_node.left = createBST(nums[:mid])\n            cur_node.right = createBST(nums[mid+1:])\n            return cur_node\n        \n        return createBST(ino)","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}