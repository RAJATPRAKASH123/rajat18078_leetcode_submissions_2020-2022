{"id":980726952,"question_id":53,"lang":"python3","lang_name":"Python3","time":"1 year, 8 months","timestamp":1687859944,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/980726952/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"N/A","code":"class Solution:\n    def maxSubArray(self, nums: List[int]) -> int:\n        n = len(nums)\n        maxIncludingIth = float(\"-inf\")\n        maxSumSubarray = nums[i]\n        for i in range(n):\n            maxIncludingIth = max(nums[i], maxIncludingIth + nums[i])\n            maxSumSubarray = max(maxIncludingIth, maxSumSubarray)\n        return maxSumSubarray\n        \n'''\nwhenever maxSum_till_now is negative. leave it.\n\n-2, 1 -3, 4, -1, 2, 1, -5, 4\n\nmax_sum_including_i -2\nmax_Sum_subarray     0\n\ni : 0 -> n - 1\n\nwhen i = 0: \nmax_sum_including_i = -2\nmax_Sum_subarray    = 0\n\ni = 1\n1\n\nmax_sum_including_i = -float(\"inf\")\nmax_Sum_subarray = 0\nfor i : 0 -> n-1:\n    max_sum_including_i = max(nums[i], max_sum_including_i + nums[i])\n    max_Sum_subarray = max(max_sum_including_i, )\n\n\n'''","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}