{"id":294402308,"question_id":53,"lang":"java","lang_name":"Java","time":"5 years, 1 month","timestamp":1579080460,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/294402308/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"N/A","code":"class Solution {\n    public int maxSubArray(int[] nums) {\n        int i = Integer.MAX_VALUE;int temp1 = 0;\n        int j = Integer.MIN_VALUE;int temp2 = 0;\n        if ( nums.length == 1)\n        {\n            return nums[0];\n        }\n        if ( nums.length == 0)\n        {\n            return 0;\n        }\n        for ( int k = 1; k< nums.length; k++ )\n        {\n            nums[k] += nums[k-1];\n        }\n        for ( int k = 0; k < nums.length; k++)\n        {\n            if ( i > nums[k] )\n            {\n                i = nums[k];temp1 = k;\n            }\n            if ( j < nums[k] )\n            {\n                j = nums[k];temp2 = k;\n            }\n        }\n        return nums[temp2] - nums[temp1];\n    }\n}","compare_result":"1111110010100111100100001100101000011011110110001010000000000010100111101001001010010011101110100010101101001001110100110011101110000111011100010110110111100100000100011110100110000110110001100100001011","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}