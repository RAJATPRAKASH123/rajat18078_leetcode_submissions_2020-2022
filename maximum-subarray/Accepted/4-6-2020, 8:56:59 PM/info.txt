{"id":320725121,"question_id":53,"lang":"python3","lang_name":"Python3","time":"4 years, 10 months","timestamp":1586186819,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/320725121/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"14.6 MB","code":"class Solution:\n    def maxSubArray(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return nums[0]\n        max_ending_here, max_so_far = 0, 0\n        for k in range(len(nums)):\n            max_ending_here = max_ending_here + nums[k]\n            max_ending_here = max(max_ending_here, 0)\n            max_so_far = max(max_ending_here, max_so_far)\n            if ( max_so_far == 0):\n                max_so_far = max(nums[:k+1])\n        return max_so_far","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}