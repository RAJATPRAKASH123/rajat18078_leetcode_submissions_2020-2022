{"id":600195816,"question_id":572,"lang":"python3","lang_name":"Python3","time":"3 years, 2 months","timestamp":1639223051,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/600195816/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSubtree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:\n        if not root and not subRoot:\n            return True\n        if root:\n            if root.val == subRoot.val and self.isSubtree(root.left, subRoot.left) and self.isSubtree(root.right, subRoot.right):\n                return True\n            else:\n                return self.isSubtree(root.left, subRoot) or self.isSubtree(root.right, subRoot)\n        return False\n        \n'''\nroot.val == subRoot.val and\n\nroot.left subtree == subRoot.left subtree and\nroot.right subtree == subRoot.right subtree\n\n'''","compare_result":"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"subtree-of-another-tree","has_notes":false,"flag_type":1}