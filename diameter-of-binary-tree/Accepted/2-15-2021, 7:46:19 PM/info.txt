{"id":456347277,"question_id":543,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1613398579,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/456347277/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def diameterOfBinaryTree(self, root: TreeNode) -> int:\n        if not root:\n            return 0\n        num_nodes = 1\n        def helper(root):\n            nonlocal num_nodes\n            if not root:\n                return 0\n            l = helper(root.left)\n            r = helper(root.right)\n            num_nodes = max(l+r+1, num_nodes)\n            return 1 + max(l,r)\n        \n        helper(root)\n        return num_nodes-1\n'''\nNote: The length of path between two nodes is represented by the number of edges between them.\n'''","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}