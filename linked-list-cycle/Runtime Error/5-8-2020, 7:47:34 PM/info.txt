{"id":336247738,"question_id":141,"lang":"python3","lang_name":"Python3","time":"4 years, 9 months","timestamp":1588947454,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/336247738/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: ListNode) -> bool:\n        slow = head\n        fast = head\n        while fast.next and fast.next.next:\n            slow = slow.next\n            fast = fast.next.next\n            if slow == fast:\n                return True\n        return False","compare_result":"11100000000000000","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}