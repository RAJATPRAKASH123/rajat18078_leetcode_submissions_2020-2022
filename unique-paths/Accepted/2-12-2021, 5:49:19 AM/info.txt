{"id":454995396,"question_id":62,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1613089159,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/454995396/","is_pending":"Not Pending","title":"Unique Paths","memory":"14.3 MB","code":"class Solution:\n    def uniquePaths(self, m: int, n: int) -> int:\n        \n        dp = [[0 for i in range(n)] for j in range(m)]\n        for i in range(m):\n            for j in range(n):\n                if i == 0 or j == 0:\n                    dp[i][j] = 1\n                    continue\n                dp[i][j] = dp[i-1][j] + dp[i][j-1]\n        return dp[m-1][n-1]\n#              Recursive function :::        \n#         def helper(i, j): # i,j : start ####### x, y : destn\n#             if i == m or j == n:\n#                 return 0\n#             if i == m-1 and j == n-1:\n#                 return 1\n#             return helper(i+1, j) + helper(i, j+1)\n#         return helper(0,0)","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-paths","has_notes":false,"flag_type":1}