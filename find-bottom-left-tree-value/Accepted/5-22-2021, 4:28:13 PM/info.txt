{"id":496607992,"question_id":513,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1621681093,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/496607992/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"16.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def findBottomLeftValue(self, root: TreeNode) -> int:\n        queue = [root]\n        #bfs\n        last_level = [root]\n        while queue:\n            temp = []\n            while queue:\n                node = queue.pop(0)\n                if node.left:\n                    temp.append(node.left)\n                if node.right:\n                    temp.append(node.right)\n            queue = temp\n            if temp:\n                last_level = temp[::]\n        # print(last_level)\n        return last_level[0].val","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-bottom-left-tree-value","has_notes":false,"flag_type":1}