{"id":496620939,"question_id":515,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1621683919,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/496620939/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"19.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def largestValues(self, root: TreeNode) -> List[int]:\n        if not root:\n            return []\n        #dfs\n        level_arr = [float('-inf')]*(10005) # it contains max of each level\n        def helper(root, level = 0):\n            if not root:\n                return\n            level_arr[level] = max(root.val, level_arr[level])\n            helper(root.left, level+1)\n            helper(root.right, level+1)\n        helper(root)\n        return level_arr[:level_arr.index(float('-inf'))]\n        \n        \n        \n        # queue = [root]\n        # res_max = [root.val]\n        # #bfs\n        # while queue:\n        #     next_level = []\n        #     while queue:\n        #         node = queue.pop(0)\n        #         if node.left:\n        #             next_level.append(node.left)\n        #         if node.right:\n        #             next_level.append(node.right)\n        #     #now queue is empty\n        #     queue = next_level\n        #     if next_level:\n        #         res_max.append(max([node.val for node in next_level]))\n        # return res_max","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row","has_notes":false,"flag_type":1}