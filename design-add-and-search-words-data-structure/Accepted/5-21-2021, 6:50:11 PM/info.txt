{"id":496244560,"question_id":211,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1621603211,"status":10,"status_display":"Accepted","runtime":"232 ms","url":"/submissions/detail/496244560/","is_pending":"Not Pending","title":"Design Add and Search Words Data Structure","memory":"22.3 MB","code":"from collections import defaultdict\nclass WordDictionary:\n\n    def __init__(self):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.words = defaultdict(set)\n\n    def addWord(self, word: str) -> None:\n        self.words[len(word)].add(word)\n\n    def search(self, word: str) -> bool:\n        \"\"\"Returns if the word is in the data structure.\n        A word can contain the dot[.] character to represent the\n        letter.\"\"\"\n        for other in self.words[len(word)]:\n            any_mismatch = any(word[x] != '.' and word[x] != other[x] for x in range(len(word)))\n            if not any_mismatch:\n                return True\n                \n                \n# Your WordDictionary object will be instantiated and called as such:\n# obj = WordDictionary()\n# obj.addWord(word)\n# param_2 = obj.search(word)","compare_result":"1111111111111","title_slug":"design-add-and-search-words-data-structure","has_notes":false,"flag_type":1}