{"id":507219958,"question_id":331,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1623570900,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/507219958/","is_pending":"Not Pending","title":"Verify Preorder Serialization of a Binary Tree","memory":"N/A","code":"class Solution:\n    def isValidSerialization(self, preorder: str) -> bool:\n        stack = []\n        preorder = preorder.split(\",\")\n        print(preorder)\n        for i in preorder:\n            if i != \"#\" or len(stack) < 2:\n                stack.append(i)\n                continue\n            if stack[-1] != \"#\":\n                stack.append(i)\n                continue\n            if len(stack) >= 2 and stack[-1] == \"#\":\n                stack.pop()\n                if not stack:\n                    return False\n                stack.pop()\n                stack.append(\"#\")\n            \n        print(stack)\n        return stack == [\"#\"]\n        \n        \n'''\nanalysis : stack, preorder\n\nwhenever len(stack) >= 2 and stack[-1] == '#' and stack[-2] == \"#\":\n    pop()\n    pop()\n\n\n'''","compare_result":"0111110111010000000001111100010000000000000000000011110000001000101000001000001010000001001000000010000111000000001010000000100000001010000111011010011","title_slug":"verify-preorder-serialization-of-a-binary-tree","has_notes":false,"flag_type":1}