{"id":496612965,"question_id":120,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1621682181,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/496612965/","is_pending":"Not Pending","title":"Triangle","memory":"17.4 MB","code":"from collections import defaultdict\nclass Solution:\n    def minimumTotal(self, triangle: List[List[int]]) -> int:\n        memo = defaultdict(int)\n        def helper(i=0, j=0):\n            if (i,j) in memo:\n                return memo[(i,j)]\n            if j == len(triangle):\n                return 0\n            memo[(i, j)] = triangle[j][i] + min(helper(i, j+1), helper(i+1, j+1))\n            return memo[(i, j)]\n        return helper()","compare_result":"1111111111111111111111111111111111111111111","title_slug":"triangle","has_notes":false,"flag_type":1}