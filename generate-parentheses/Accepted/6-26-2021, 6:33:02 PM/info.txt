{"id":513420074,"question_id":22,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1624712582,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/513420074/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"14.5 MB","code":"class Solution:\n    def generateParenthesis(self, n: int) -> List[str]:\n        res = []\n        def parenth(left , right , stack = []):\n            \n            nonlocal n\n\n            if len(stack) == 2*n:\n                res.append(\"\".join(stack)) \n                return\n            \n            if left < n:\n                stack.append('(')\n                parenth(left+1, right)\n                stack.pop()\n            if left > right:\n                stack.append(')')\n                parenth(left, right+1)\n                stack.pop()\n            \n            \n            \n        parenth(0, 0)\n        return res\n                 \n'''\n\n'''","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"flag_type":1}