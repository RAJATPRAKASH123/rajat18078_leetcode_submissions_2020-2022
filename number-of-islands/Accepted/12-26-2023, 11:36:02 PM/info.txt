{"id":1129073260,"question_id":200,"lang":"python3","lang_name":"Python3","time":"1 year, 2 months","timestamp":1703613962,"status":10,"status_display":"Accepted","runtime":"228 ms","url":"/submissions/detail/1129073260/","is_pending":"Not Pending","title":"Number of Islands","memory":"19.6 MB","code":"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        \n        move = ((-1, 0), (1, 0), (0, 1), (0, -1))\n        \n        def dfs(start_x=0, start_y=0):\n            grid[start_x][start_y] = \"0\"\n            for x, y in move:\n                next_x, next_y = start_x + x, start_y + y\n                if 0 <= next_x < len(grid) and 0 <= next_y < len(grid[0]) and grid[next_x][next_y] == \"1\":\n                    dfs(next_x, next_y)\n        islands = 0\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] == \"1\":\n                    dfs(i, j)\n                    islands += 1\n        return islands\n        ","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}