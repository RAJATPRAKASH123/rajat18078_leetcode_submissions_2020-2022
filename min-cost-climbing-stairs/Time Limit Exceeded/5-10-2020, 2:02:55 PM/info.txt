{"id":337169570,"question_id":747,"lang":"python3","lang_name":"Python3","time":"4 years, 9 months","timestamp":1589099575,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/337169570/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"N/A","code":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        # if cost == [0,0,1,1]:\n        #     return 1\n        if len(cost) == 1:\n            return 0\n        # if len(cost) == 3:\n        #     return min(cost[1], cost[0] + cost[2])\n        if len(cost) == 2:\n            return min(cost)\n        return min(cost[-1]+self.minCostClimbingStairs(cost[:len(cost)-1]),cost[-2]+self.minCostClimbingStairs(cost[:len(cost)-2]))","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}