{"id":337174505,"question_id":747,"lang":"python3","lang_name":"Python3","time":"4 years, 9 months","timestamp":1589100451,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/337174505/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"13.9 MB","code":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        # if len(cost) == 0:\n        #     return 0\n        # if len(cost) == 1:\n        #     return 0\n        # # if len(cost) == 3: // this if not required\n        # #     return min(cost[1], cost[0] + cost[2])\n        # # if len(cost) == 2:// this if not required\n        # #     return min(cost)\n        # return min(cost[-1]+self.minCostClimbingStairs(cost[:len(cost)-1]),cost[-2]+self.minCostClimbingStairs(cost[:len(cost)-2]))\n        dp=[0]*(len(cost)+1)\n        for i in range(2,len(cost)+1):\n            dp[i]=min(cost[i-1]+dp[i-1],cost[i-2]+dp[i-2])\n        return dp[-1]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}