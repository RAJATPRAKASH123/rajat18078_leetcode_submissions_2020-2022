{"id":454457125,"question_id":801,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1612969476,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/454457125/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"N/A","code":"class Solution:\n    def isBipartite(self, graph: List[List[int]]) -> bool:\n        \n        n = len(graph)\n        colors = [-1 for i in range(n)]\n        \n        queue = [0]\n        colors[0] = 0\n        \n        while queue:\n            temp = []\n            while queue:\n                node = queue.pop()\n                for neighbour in graph[node]:\n                    if colors[neighbour] == -1:\n                        colors[neighbour] = abs(1 - colors[node])\n                        temp.append(neighbour)\n                    elif colors[neighbour] == colors[node]:\n                        return False\n                    else:\n                        continue\n\n            queue = temp\n        return True\n        \n'''\ngraph : undirected\n\nEach node is an integer between 0 and graph.length - 1\n# Approach : \nsets -> A and B : 0 and 1 colors respectively\n\nfor \n'''\n","compare_result":"111111111111111111011111111111111111111111111111111111110111111011011111111111","title_slug":"is-graph-bipartite","has_notes":false,"flag_type":1}