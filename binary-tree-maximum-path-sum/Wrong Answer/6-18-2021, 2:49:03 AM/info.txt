{"id":509425071,"question_id":124,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1623964743,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/509425071/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxPathSum(self, root: TreeNode) -> int:\n        res = float('-inf')\n        def maxPath(root):\n            nonlocal res\n            if not root:\n                return 0\n            left = maxPath(root.left)\n            right = maxPath(root.right)\n            res = max(res, root.val, root.val + max(left, right), root.val + left + right)\n            return root.val + max(left, right)\n        \n        maxPath(root)\n        return res\n        \n'''\ntraverse left, right\ncur + left\ncur + right\nmax_including_root dictionary\nupdate dict[root]: cur + max(left, right)\n\nglobal_max = max(cur+ left + right, dict[root.left] \n\n'''","compare_result":"1111111111111111111111111111111111111111111111111111110111111111111111111111111111111101111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}