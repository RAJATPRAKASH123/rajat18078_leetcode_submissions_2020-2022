{"id":511307161,"question_id":41,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1624316496,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/511307161/","is_pending":"Not Pending","title":"First Missing Positive","memory":"N/A","code":"class Solution:\n    def firstMissingPositive(self, nums: List[int]) -> int:\n        for i in range(len(nums)):\n            if nums[i] <= 0 or nums[i] > len(nums):\n                nums[i] = -1\n            else:\n                nums[i] -= 1\n        cur = 0\n\n        count = 0\n        while cur < len(nums):\n            count += 1\n            if count == 10:\n                break\n            if nums[cur] == -1 or nums[cur] == cur:\n                cur += 1\n                continue\n            temp = nums[cur]\n            nums[cur], nums[temp] = nums[temp], nums[cur]\n            \n        for i in range(len(nums)):\n            if nums[i] == -1:\n                return i+1\n        return len(nums)+1\n\n'''\n\n2 3 -1 0\n\n0 -1 2 3\n\n\n3 4 0 1\n\n2 3 -1 0\n\n0 -1 2 3\n\nres belongs to 1 to len(nums)\n\nif -ve : 0\nif > n : 0\n\n'''","compare_result":"11111111111101011111111110110001100001000101001011100001011111000110100111111011100010110010110110101011111101011100001010000100000001000000100111000100101100011100101011","title_slug":"first-missing-positive","has_notes":false,"flag_type":1}