{"id":358747668,"question_id":581,"lang":"python3","lang_name":"Python3","time":"4Â years, 8Â months","timestamp":1593209246,"status":10,"status_display":"Accepted","runtime":"216 ms","url":"/submissions/detail/358747668/","is_pending":"Not Pending","title":"Shortest Unsorted Continuous Subarray","memory":"15.1 MB","code":"class Solution:\n    def findUnsortedSubarray(self, nums: List[int]) -> int:\n        s_nums = sorted(nums)\n        l, r = 0, 0\n        for i in range(len(s_nums)):\n            if nums[i] != s_nums[i]:\n                l = i\n                break\n        for i in range(len(s_nums)-1, -1, -1):\n            if nums[i] != s_nums[i]:\n                r = i\n                break\n        if l == r and nums[l] == s_nums[r]:\n            return 0\n        return r - l + 1","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-unsorted-continuous-subarray","has_notes":false,"flag_type":1}