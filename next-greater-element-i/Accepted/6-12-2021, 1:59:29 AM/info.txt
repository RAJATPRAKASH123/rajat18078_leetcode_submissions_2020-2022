{"id":506525840,"question_id":496,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1623443369,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/506525840/","is_pending":"Not Pending","title":"Next Greater Element I","memory":"14.5 MB","code":"class Solution:\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\n        ng_arr = [0] * (max(nums2) + 1)\n        stack = []\n        for i in range(len(nums2)-1, -1, -1):\n            # print(i, stack)\n            while stack and nums2[i] > stack[-1]:\n                stack.pop()\n            if stack and nums2[i] < stack[-1]:\n                ng_arr[nums2[i]] = stack[-1]\n                stack.append(nums2[i])\n            elif not stack:\n                ng_arr[nums2[i]] = -1\n                stack.append(nums2[i])\n        for i in range(len(nums1)):\n            nums1[i] = ng_arr[nums1[i]]\n        return nums1\n            \n            \n'''\nanalysis : \n\ndesign : next_greater array\nkeep an array\ntraverse from last to first\nkeep the next max possiblities in the stack\n'''","compare_result":"111111111111111","title_slug":"next-greater-element-i","has_notes":false,"flag_type":1}