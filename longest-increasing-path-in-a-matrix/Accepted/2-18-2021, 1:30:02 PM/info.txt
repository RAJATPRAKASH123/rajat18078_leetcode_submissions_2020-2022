{"id":457515133,"question_id":329,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1613635202,"status":10,"status_display":"Accepted","runtime":"396 ms","url":"/submissions/detail/457515133/","is_pending":"Not Pending","title":"Longest Increasing Path in a Matrix","memory":"15.3 MB","code":"class Solution:\n    def longestIncreasingPath(self, arr: List[List[int]]) -> int:\n        row, col = len(arr), len(arr[0])\n        dp = [[-1 for j in range(col)] for i in range(row)]\n        def helper(i, j):\n            nonlocal row, col\n            l, r, u, d = 0, 0, 0, 0\n            if dp[i][j] != -1:\n                return dp[i][j]\n            if i != 0 and arr[i-1][j] > arr[i][j]:\n                l = 1 + helper(i-1, j)\n            if j != 0 and arr[i][j-1] > arr[i][j]:\n                u = 1 + helper(i, j-1)\n            if i != row - 1 and arr[i+1][j] > arr[i][j]:\n                r = 1 + helper(i+1, j)\n            if j != col - 1 and arr[i][j+1] > arr[i][j]:\n                d = 1 + helper(i, j+1)\n            dp[i][j] = max(1,l, u, r, d)\n            return dp[i][j]\n        ans = 1\n        for i in range(row):\n            for j in range(col):\n                ans = max(ans, helper(i,j))\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-path-in-a-matrix","has_notes":false,"flag_type":1}