{"id":516061615,"question_id":222,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1625182074,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/516061615/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"21.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def countNodes(self, root: TreeNode) -> int:\n        def height(root):\n            if not root:\n                return 0\n            return 1 + height(root.left)\n\n        def nodeCount(root):\n            if not root:\n                return 0\n            res = 0\n            left_height =  height(root.left) \n            right_height = height(root.right)\n            if left_height == right_height:\n                res = 2 ** (left_height) + nodeCount(root.right)\n            else:\n                res = 2 ** (right_height) + nodeCount(root.left)\n            return res\n        return nodeCount(root)","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes","has_notes":false,"flag_type":1}