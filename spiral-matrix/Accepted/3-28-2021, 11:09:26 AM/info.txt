{"id":473330768,"question_id":54,"lang":"python3","lang_name":"Python3","time":"3 years, 11 months","timestamp":1616909966,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/473330768/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"14.2 MB","code":"class Solution:\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        \n        row = len(matrix)\n        col = len(matrix[0])\n        res = []\n        l_end, r_end, d_end, u_end = 0, col-1, row - 1, 0\n        \n        while l_end <= r_end and u_end <= d_end:\n            for forward in range(l_end, r_end+1):\n                res.append(matrix[u_end][forward])\n            u_end += 1\n            if len(res) == row * col:break\n            for down in range(u_end, d_end+1):\n                res.append(matrix[down][r_end])\n            r_end -= 1\n            if len(res) == row * col:break\n            for backward in range(r_end, l_end-1, -1):\n                res.append(matrix[d_end][backward])\n            d_end -= 1\n            if len(res) == row * col:break\n            for up in range(d_end, u_end - 1, -1):\n                res.append(matrix[up][l_end])\n            l_end += 1\n            if len(res) == row * col:break\n            # print(l_end, r_end, u_end, d_end)\n        return res\n'''\n[[1,2,3,4],\n [5,6,7,8],\n [9,10,11,12]]\n\n1 2 1 1\n\n2 1 2 0\n\n\n0, i \nif i+1 not in range or visited[i+1]:\nj, i\n\n'''","compare_result":"1111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}