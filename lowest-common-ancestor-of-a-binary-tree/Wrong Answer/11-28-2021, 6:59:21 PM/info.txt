{"id":593943312,"question_id":236,"lang":"python3","lang_name":"Python3","time":"3 years, 3 months","timestamp":1638106161,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/593943312/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\nimport copy\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        \n        self.res_list = []\n        def search_ancestors(node, target, ancestors_list = []):\n            if not node:\n                return\n            if node == target:\n                \n                self.res_list = copy.deepcopy(ancestors_list)\n                return\n            search_ancestors(node.left, target, [node] + ancestors_list)\n            search_ancestors(node.right, target, [node] + ancestors_list)\n            \n        search_ancestors(root, p)\n        \n        p_anc = copy.deepcopy(self.res_list)\n        self.res_list = []\n        search_ancestors(root, q)\n        q_anc = copy.deepcopy(self.res_list)\n        res = root\n        \n        for i in range(min(len(p_anc), len(q_anc))):\n            if p_anc[i] == q_anc[i]:\n                res = p_anc[i]\n            else:\n                return res\n        ","compare_result":"1000001101100000100100011000000","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}