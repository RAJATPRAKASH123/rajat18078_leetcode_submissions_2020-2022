{"id":359177164,"question_id":236,"lang":"python3","lang_name":"Python3","time":"4 years, 8 months","timestamp":1593302503,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/359177164/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        if root == p or root == q:\n            return root\n        if root.left:\n            left = self.lowestCommonAncestor(root.left, p, q)\n        if root.right:\n            right = self.lowestCommonAncestor(root.right, p, q)\n        if left and right:\n            return root\n        return left or right","compare_result":"1000000000000000000000000000000","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}