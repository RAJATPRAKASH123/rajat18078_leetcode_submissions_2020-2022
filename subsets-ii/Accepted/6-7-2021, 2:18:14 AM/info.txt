{"id":504079905,"question_id":90,"lang":"python3","lang_name":"Python3","time":"3Â years, 8Â months","timestamp":1623012494,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/504079905/","is_pending":"Not Pending","title":"Subsets II","memory":"14.5 MB","code":"class Solution:\n    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:\n        \n        nums.sort()\n        res = []\n        def helper(start, cur_set=[]):\n            res.append(cur_set[:])\n            if start == len(nums):\n                return\n            \n            for next in range(start, len(nums)):\n                if next != start and nums[next] == nums[next-1]:\n                    continue\n                cur_set.append(nums[next])\n                helper(next+1, cur_set)\n                cur_set.pop()\n        helper(0)\n        return res\n'''\nhere, back-tracking can be used to solve it efficiently\n'''","compare_result":"1111111111111111111","title_slug":"subsets-ii","has_notes":false,"flag_type":1}