{"id":499982057,"question_id":416,"lang":"python3","lang_name":"Python3","time":"3Â years, 9Â months","timestamp":1622310045,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/499982057/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"N/A","code":"class Solution:\n    def canPartition(self, nums: List[int]) -> bool:\n        target = sum(nums)/2\n        if target%2:\n            return False\n        dp = [[False for i in range(target+1)] for j in range(len(nums)+1)]\n        \n        for i in range(len(nums)):\n            dp[i][0] = True\n            \n        for i in range(1, len(nums)+1):\n            for j in range(1, target+1):\n                if j-nums[i-1] >= 0:\n                    dp[i][j] = dp[i-1][j-nums[i-1]] or dp[i-1][j]\n        return dp[-1][target]\n        \n'''\nhelper(i=len(nums)-1, cur_sum = sum(nums)//2):\n    if cur_sum == 0:\n        return True\n    if i < 0:\n        return False\n        \n    return helper(i-1, cur_sum-nums[i]) or helper(i-1, cur_sum )\n'''","compare_result":"01111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}