{"id":499987688,"question_id":416,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1622310836,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/499987688/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"N/A","code":"class Solution:\n    def canPartition(self, nums: List[int]) -> bool:\n        if sum(nums)%2:\n            return False\n        target = sum(nums)//2\n        \n        dp = [[False for i in range(target+1)] for j in range(len(nums)+1)]\n\n        for i in range(len(nums)+1):\n            dp[i][0] = True\n        \n        for i in range(1, len(nums)+1):\n            for j in range(target+1):\n                if j-nums[i-1] >= 0:\n                    dp[i][j] = dp[i-1][j] or dp[i-1][j-nums[i-1]]\n        return dp[-1][-1]\n            \n\n'''\n          0 1 2 3 ...    20\n\n0    1    \n1    5\n2    11\n3    5\n[[True, False, False, False, False, False, False, False, False, False, False, False],\n[True, True, False, False, False, False, False, False, False, False, False, False],\n[True, False, False, False, False, True, True, False, False, False, False, False], \n[True, False, False, False, False, False, False, False, False, False, False, True], \n[True, False, False, False, False, True, False, False, False, False, False, True]]\n\n\nhelper(i=len(nums)-1, cur_sum = sum(nums)//2):\n    if cur_sum == 0:\n        return True\n    if i < 0:\n        return False\n        \n    return helper(i-1, cur_sum-nums[i]) or helper(i-1, cur_sum )\n'''","compare_result":"11111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}