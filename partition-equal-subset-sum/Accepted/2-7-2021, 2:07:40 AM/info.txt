{"id":452879016,"question_id":416,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1612643860,"status":10,"status_display":"Accepted","runtime":"4776 ms","url":"/submissions/detail/452879016/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"30.4 MB","code":"class Solution:\n    def canPartition(self, arr: List[int]) -> bool:\n        s = sum(arr)\n        n = len(arr)\n        dp = [[-1 for j in range(s//2 + 1)] for i in range(n+1)]\n        for j in range(s//2 + 1):\n            for i in range(n+1):\n                dp[i][j] = False\n                \n            \n        for i in range(n+1):\n            dp[i][0] = True\n            \n        if s%2 == 1:\n            return False\n        \n        temp = s//2\n        for i in range(1,n+1):\n            for temp in range(1, s//2+1):\n                if temp - arr[i-1] < 0:\n                    continue\n                \n                dp[i][ temp] = dp[i-1][temp-arr[i-1]] or dp[i-1][temp]\n                \n        return dp[n][s//2]\n        \n'''\n\ncanP(arr, temp):\n    if temp == 0:\n        return True\n    if temp < 0 or len(arr) == 0:\n        return False\n    return canP(arr[:-1], temp - arr[-1]) or canP(arr[:-1], temp) \n\n'''","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}