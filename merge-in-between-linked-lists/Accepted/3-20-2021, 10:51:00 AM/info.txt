{"id":470028080,"question_id":1765,"lang":"python3","lang_name":"Python3","time":"3 years, 11 months","timestamp":1616217660,"status":10,"status_display":"Accepted","runtime":"448 ms","url":"/submissions/detail/470028080/","is_pending":"Not Pending","title":"Merge In Between Linked Lists","memory":"20.4 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeInBetween(self, list1: ListNode, a: int, b: int, list2: ListNode) -> ListNode:\n        \n        head = list1\n        count = 0\n        prev_a = None\n        while count != b:\n            if count < a:\n                prev_a = head\n            head = head.next\n            count += 1\n        \n        if prev_a is None:\n            list2.next = head.next\n            return list2\n        prev_a.next = list2\n        while list2.next is not None:\n            list2 = list2.next\n        list2.next = head.next\n        return list1","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-in-between-linked-lists","has_notes":false,"flag_type":1}