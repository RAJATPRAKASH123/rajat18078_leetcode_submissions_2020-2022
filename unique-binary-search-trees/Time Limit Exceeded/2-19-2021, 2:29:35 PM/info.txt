{"id":457930521,"question_id":96,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1613725175,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/457930521/","is_pending":"Not Pending","title":"Unique Binary Search Trees","memory":"N/A","code":"class Solution:\n    def numTrees(self, n: int) -> int:\n        \n        def unique_bsts(l, r):\n            ans = 0\n            if r-l == 2:\n                return 5\n            if r-l == 1:\n                return 2\n            if r-l == 0 or r-l == -1:\n                return 1\n            for root in range(l, r+1):\n                ans += unique_bsts(l, root-1) * unique_bsts(root+1, r)\n            return ans\n        return unique_bsts(1, n)","compare_result":"1111111111110000000","title_slug":"unique-binary-search-trees","has_notes":false,"flag_type":1}