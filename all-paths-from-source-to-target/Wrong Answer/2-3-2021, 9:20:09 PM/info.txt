{"id":451530600,"question_id":813,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1612367409,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/451530600/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"N/A","code":"class Solution:\n    def allPathsSourceTarget(self, graph: List[List[int]]) -> List[List[int]]:\n        ans = []\n        def allPaths(graph, path, visited ):\n            nonlocal ans\n            if path[-1] == len(graph)-1:\n                ans.append(path)\n                return\n            visited[path[-1]] = True\n            for neighbour in graph[path[-1]]:\n                if not visited[neighbour]:\n                    allPaths(graph, path+[neighbour], visited )\n                    \n        visited = [False for i in range(len(graph))]\n        allPaths(graph, [0], visited)\n        return ans\n        \n'''\n0 -> 4 3 1\n1 -> 3 2 4\n2 -> 3\n3 -> 4\n4 -> None\n\n''' ","compare_result":"101010000000000101100000000000","title_slug":"all-paths-from-source-to-target","has_notes":false,"flag_type":1}