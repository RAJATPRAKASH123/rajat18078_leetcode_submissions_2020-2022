{"id":456854706,"question_id":813,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1613500361,"status":10,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/456854706/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"15.7 MB","code":"\nclass Solution:\n    def allPathsSourceTarget(self, graph: List[List[int]]) -> List[List[int]]:\n        \n        # DAG of n nodes 0 to n-1\n        res = []\n        last_node = [len(graph)]\n        \n        def dfs(start, ans = [0]):\n            if start == last_node[0]-1:\n                res.append(ans)\n                return\n            for neigh in graph[start]:\n                dfs(neigh, ans + [neigh])\n        dfs(0)\n        return res","compare_result":"111111111111111111111111111111","title_slug":"all-paths-from-source-to-target","has_notes":false,"flag_type":1}