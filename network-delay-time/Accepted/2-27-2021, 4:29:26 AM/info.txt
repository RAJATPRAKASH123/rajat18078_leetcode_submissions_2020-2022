{"id":461074465,"question_id":744,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1614380366,"status":10,"status_display":"Accepted","runtime":"468 ms","url":"/submissions/detail/461074465/","is_pending":"Not Pending","title":"Network Delay Time","memory":"16.2 MB","code":"from collections import defaultdict\nimport heapq\nclass Solution:\n    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:\n        \n        graph = defaultdict(list)\n        for ui, vi, time in times:\n            graph[ui].append([time, vi])\n        \n        # Initialize every node with inf time, except source node\n        distance = [float('inf') for i in range(n+1)]\n        distance[k] = 0\n        distance[0] = 0\n        pQueue = [(0, k)]\n        \n        while pQueue:\n            \n            path_len, cur_node = heappop(pQueue)\n\n            if path_len == distance[cur_node]:\n                for time, neigh in graph[cur_node]:\n                    if path_len + time < distance[neigh] :\n                        distance[neigh] = path_len + time\n                        heappush(pQueue, (path_len + time, neigh))\n        ans = max(distance)\n        if ans == float('inf'):\n            return -1\n        return ans\n    ","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"network-delay-time","has_notes":false,"flag_type":1}