{"id":293131289,"question_id":98,"lang":"java","lang_name":"Java","time":"5 years, 1 month","timestamp":1578720058,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/293131289/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"39.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        return helpMe(root, null, null);\n    }\n    \n    public boolean helpMe(TreeNode root, Integer lower, Integer upper )\n    {\n        if ( root ==  null )\n        {\n            return true;\n        }\n        if ( upper != null && root.val >= upper ){return false;}\n        if ( lower != null && root.val <= lower ){return false;}\n        \n        int val = root.val;\n        if ( !helpMe(root.left, lower, val)){return false;}\n        if ( !helpMe(root.right, val, upper)){return false;}\n        return true;\n    }\n\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}