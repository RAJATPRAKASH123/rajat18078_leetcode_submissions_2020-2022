{"id":506849382,"question_id":42,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1623510703,"status":10,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/506849382/","is_pending":"Not Pending","title":"Trapping Rain Water","memory":"15.1 MB","code":"class Solution:\n    def trap(self, height: List[int]) -> int:\n        if len(height) <= 2:\n            return 0\n        max_index = height.index(max(height))\n        \n        # 0 -> max_index\n        # max_index -> len(height)-1\n        \n        def trapWater(arr):\n            stack = []\n            next_greater = []\n            for i in range(len(arr)-1, -1, -1):\n                \n                while stack and arr[i] > arr[stack[-1]]:\n                    stack.pop()\n                if stack and arr[i] <= arr[stack[-1]]:\n                    next_greater = [stack[-1]] + next_greater\n                    stack.append(i)\n                else:\n                    next_greater = [-1] + next_greater\n                    stack.append(i)\n            left = 0\n            water = 0\n            # print(next_greater)\n            while left < len(arr)-1:\n                if next_greater[left] == -1:\n                    break\n                for i in range(left, next_greater[left]):\n                    water += arr[left]- arr[i]\n                left = next_greater[left]\n            return water\n            \n        return  trapWater(height[:max_index+1]) + trapWater(height[max_index:][::-1] )","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trapping-rain-water","has_notes":false,"flag_type":1}