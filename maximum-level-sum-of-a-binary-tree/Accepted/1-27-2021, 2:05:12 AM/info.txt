{"id":448199572,"question_id":1116,"lang":"python3","lang_name":"Python3","time":"4 years, 1 month","timestamp":1611693312,"status":10,"status_display":"Accepted","runtime":"288 ms","url":"/submissions/detail/448199572/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"18.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxLevelSum(self, root: TreeNode) -> int:\n        \n        queue = [root]\n        lot = [root.val]\n        while queue:\n            \n            arr = []\n            while queue:\n                temp = queue.pop(0)\n                if temp.left:\n                    arr.append(temp.left)\n                if temp.right:\n                    arr.append(temp.right)\n            if arr:\n                queue = arr\n                lot += [sum([node.val for node in arr]) ]\n        print(lot)\n        return lot.index(max(lot))+1\n            ","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree","has_notes":false,"flag_type":1}