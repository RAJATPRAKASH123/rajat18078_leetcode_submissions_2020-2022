{"id":502460074,"question_id":76,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1622732879,"status":10,"status_display":"Accepted","runtime":"176 ms","url":"/submissions/detail/502460074/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"14.9 MB","code":"class Solution:\n    def minWindow(self, s, t):\n        need, missing = {}, len(t)\n        for i in t:\n            if i in need:\n                need[i]+=1\n            else:\n                need[i]=1\n        i = I = J = 0\n        for j, c in enumerate(s,1):\n            if c in need:\n                missing-= need[c]>0\n                need[c]-=1\n            if not missing:\n                while i<j and (s[i] not in need or need[s[i]]<0):\n                    if s[i] in need:\n                        need[s[i]] +=1\n                    i+=1\n                if not J or j-i<J-I:\n                    I, J = i, j\n        return s[I:J]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}