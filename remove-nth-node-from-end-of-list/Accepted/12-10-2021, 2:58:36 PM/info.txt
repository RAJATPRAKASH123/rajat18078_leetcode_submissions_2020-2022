{"id":599753182,"question_id":19,"lang":"python3","lang_name":"Python3","time":"3 years, 2 months","timestamp":1639128516,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/599753182/","is_pending":"Not Pending","title":"Remove Nth Node From End of List","memory":"14.1 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:\n        \n#         two traversal , this is faaltu\n#         one traversal , use fundamental of tortoise and hare ( fast and slow pointer)    \n#         concept : use two pointers at a time to traverse a single linked list and\n#         keep track of two positions (in a single traversal).\n        # 1 2 3 4 5 : n = 2\n#             p   q\n        \n        p = head\n        q = head\n        count = n \n        while ( count != 0):\n            q = q.next\n            count -= 1\n        if not q:\n            return head.next\n        while q.next:\n            q = q.next\n            p = p.next\n        if not p.next:\n            p.next = None\n        else:\n            p.next = p.next.next\n        return head\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-nth-node-from-end-of-list","has_notes":false,"flag_type":1}