{"id":470407746,"question_id":1927,"lang":"python3","lang_name":"Python3","time":"3 years, 11 months","timestamp":1616296916,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/470407746/","is_pending":"Not Pending","title":"Maximum Ascending Subarray Sum","memory":"14.3 MB","code":"class Solution:\n    def maxAscendingSum(self, nums: List[int]) -> int:\n        n = len(nums)\n        if n == 1:\n            return nums[0]\n        res = 0\n        for i in range(n):\n            temp = nums[i]\n            for j in range(i+1,n):\n                if nums[j] > nums[j-1]:\n                    temp += nums[j]\n                else:\n                    break\n            # print(i, temp)\n            res = max(res, temp)\n        return res","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-ascending-subarray-sum","has_notes":false,"flag_type":1}