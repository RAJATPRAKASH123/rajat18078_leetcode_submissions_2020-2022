{"id":445932391,"question_id":967,"lang":"python3","lang_name":"Python3","time":"4 years, 1 month","timestamp":1611243011,"status":10,"status_display":"Accepted","runtime":"176 ms","url":"/submissions/detail/445932391/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"16.6 MB","code":"class Solution:\n    def minFallingPathSum(self, arr: List[List[int]]) -> int:\n        n = len(arr)\n        dp = [[-1 for i in range(n)] for j in range(n)]\n        def helper(arr, i,j):\n            u,d = max(0,j-1), min(len(arr)-1, j+1)\n            if i == len(arr)-1:\n                return arr[i][j]\n            if dp[i][j] != -1:\n                return dp[i][j]\n            dp[i][j] = arr[i][j] + min( helper(arr, i+1, d), helper(arr, i+1, u), helper(arr, i+1, j) )\n            return dp[i][j]\n        \n        temp = float('inf')\n        for j in range(n):\n            temp = min(temp,helper(arr,0,j))\n        return temp","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum","has_notes":false,"flag_type":1}