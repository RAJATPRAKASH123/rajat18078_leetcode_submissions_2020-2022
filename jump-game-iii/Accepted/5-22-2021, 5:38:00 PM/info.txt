{"id":496627231,"question_id":1428,"lang":"python3","lang_name":"Python3","time":"3Â years, 9Â months","timestamp":1621685280,"status":10,"status_display":"Accepted","runtime":"308 ms","url":"/submissions/detail/496627231/","is_pending":"Not Pending","title":"Jump Game III","memory":"74.2 MB","code":"class Solution:\n    def canReach(self, arr: List[int], start: int) -> bool:\n\n        visited = set()\n        #dfs\n        def dfs(start):\n            if start in visited:\n                return\n            if start < 0 or start >= len(arr):\n                return False\n            visited.add(start)\n            if arr[start] == 0:\n                return True\n            return dfs(start+arr[start]) or dfs(start-arr[start])\n        return dfs(start)","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-iii","has_notes":false,"flag_type":1}