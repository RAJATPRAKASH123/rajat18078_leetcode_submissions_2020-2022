{"id":380230193,"question_id":1254,"lang":"python3","lang_name":"Python3","time":"4 years, 6 months","timestamp":1597301198,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/380230193/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"17.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def deepestLeavesSum(self, root: TreeNode) -> int:\n        if not root:\n            return 0\n        def helper(root):\n            ans = 0\n            queue = [root]\n            while queue:\n                temp_queue = []\n                while queue:\n                    node = queue.pop()\n                    if node.left:\n                        temp_queue.append(node.left)\n                    if node.right:\n                        temp_queue.append(node.right)\n                if temp_queue:\n                    queue = temp_queue\n                else:\n                    break\n                # print(queue, 15)\n                ans = 0\n                for i in queue:\n                    ans += i.val\n            return ans\n        return helper(root)","compare_result":"111111111111111","title_slug":"deepest-leaves-sum","has_notes":false,"flag_type":1}