{"id":513580477,"question_id":1669,"lang":"cpp","lang_name":"C++","time":"3 years, 8 months","timestamp":1624734039,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/513580477/","is_pending":"Not Pending","title":"Minimum Cost to Cut a Stick","memory":"10.3 MB","code":"class Solution\n{\n    private:\n        int minCost(int start,int end,const vector<int>& cuts,vector<vector<int>>& costs)\n        {\n            if(start==end-1)\n                return 0;\n            else if(costs[start][end]!=-1)\n                return costs[start][end];\n            \n            int min_cost=INT_MAX;\n            for(int i=start+1; i<end; ++i)\n            {\n                int cost = (cuts[end]-cuts[start]) +  minCost(start,i,cuts,costs) +  minCost(i,end,cuts,costs);\n                min_cost=min(min_cost,cost);\n            }\n            costs[start][end]=min_cost;\n            return min_cost;\n        }\n    public:\n        int minCost(int n, vector<int>& cuts)\n        {\n            cuts.push_back(0);\n            cuts.push_back(n);\n            sort(cuts.begin(),cuts.end());\n            int k=cuts.size();\n            vector<vector<int>> costs(k,vector<int>(k,-1));\n            minCost(0,cuts.size()-1,cuts,costs);\n            return costs[0][k-1];\n        }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-cut-a-stick","has_notes":false,"flag_type":1}