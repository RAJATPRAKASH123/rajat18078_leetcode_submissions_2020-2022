{"id":497622072,"question_id":33,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1621866901,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/497622072/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"N/A","code":"class Solution:\n    def search(self, nums: List[int], target: int) -> int:\n        \n        \n        #first index whose value is less than nums[0]\n        def binSearch_mod(nums):\n            left, right = 0, len(nums)-1\n            while left < right:\n                mid = (left+right)//2\n                if nums[mid] >= nums[0]:\n                    left = mid + 1\n                else:\n                    right = mid\n            if nums[left] > nums[0]:\n                left = -1\n            return left\n        k = binSearch_mod(nums)\n        \n        def binSearch(arr, target):\n            left, right = 0, len(arr)-1\n            while left <= right:\n                mid = (left+right)//2\n                # print(left, right, mid)\n                if arr[mid] == target:\n                    return mid\n                if arr[mid] < target:\n                    left = mid+1\n                else:\n                    right = mid-1\n            return -1\n        \n        if k == -1:\n            return binSearch(nums,target)\n        elif nums[0] <= target:\n            return binSearch(nums[:k], target)\n        else:\n            res = binSearch(nums[k:], target)\n            if res == -1:\n                return -1\n            return k + res","compare_result":"111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}