{"id":451589357,"question_id":1661,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1612377242,"status":10,"status_display":"Accepted","runtime":"1580 ms","url":"/submissions/detail/451589357/","is_pending":"Not Pending","title":"Minimum Number of Vertices to Reach All Nodes","memory":"53.2 MB","code":"class Solution:\n    def findSmallestSetOfVertices(self, n: int, edges: List[List[int]]) -> List[int]:\n        l,r = set(), set()\n        for i in range(len(edges)):\n            l.add(edges[i][0])\n            r.add(edges[i][1])\n        ans = []\n        for i in l:\n            if i not in r:\n                ans += [i]\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-vertices-to-reach-all-nodes","has_notes":false,"flag_type":1}