{"id":336133004,"question_id":1035,"lang":"python3","lang_name":"Python3","time":"4Â years, 9Â months","timestamp":1588924067,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/336133004/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isCousins(self, root: TreeNode, x: int, y: int) -> bool:\n        queue=[root]\n        while queue:\n            temp_stack=[]\n            x_idx = None\n            y_idx = None\n            while queue:\n                node = queue.pop(0)\n                if not node:\n                    continue\n                temp_stack.append(node.left)\n                temp_stack.append(node.right)\n            queue=temp_stack[:]\n            for i in range(len(temp_stack)):\n                if temp_stack[i]:\n                    if temp_stack[i].val == x:\n                        x_idx = i\n                    if temp_stack[i].val == y:\n                        y_idx = i\n            if x_idx and y_idx:\n                f = min(x_idx,y_idx)\n                s = max(x_idx,y_idx)\n                if s - f >= 2:\n                    return True\n                if f%2 == 1 and s%2==0 and s-f == 1:\n                    return True\n        return False","compare_result":"1111111111111011111111111111111111111111111111110111111111111111110111111111111111111111111111011111111","title_slug":"cousins-in-binary-tree","has_notes":false,"flag_type":1}