{"id":498567045,"question_id":78,"lang":"python3","lang_name":"Python3","time":"3Â years, 9Â months","timestamp":1622039877,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/498567045/","is_pending":"Not Pending","title":"Subsets","memory":"14.5 MB","code":"class Solution:\n    def subsets(self, nums: List[int]) -> List[List[int]]:\n        res = []\n        def helper(start, cur_res = []):\n            res.append(cur_res[:])\n            if start == len(nums):\n                return\n            \n            for nxt in range(start, len(nums)):\n                cur_res.append(nums[nxt])\n                helper(nxt+1, cur_res)\n                cur_res.pop()\n                \n        # helper(0)\n        nums.sort()\n        res = set()\n        def helper2(start, cur_res=[]):\n            res.add(tuple(cur_res[:])) \n            if start == len(nums):\n                return\n            \n            helper2(start+1, cur_res[:] + [nums[start]])\n            helper2(start+1, cur_res[:])\n        helper2(0)\n        return res","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"flag_type":1}