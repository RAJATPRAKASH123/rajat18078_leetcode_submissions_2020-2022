{"id":358580439,"question_id":103,"lang":"python3","lang_name":"Python3","time":"4 years, 8 months","timestamp":1593173222,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/358580439/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"14.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def zigzagLevelOrder(self, root: TreeNode) -> List[List[int]]:\n        queue = [root]\n        flag = True\n        if not root:\n            return []\n        ans = [[root.val]]\n        while queue:\n            stack = []\n            while queue:\n                node = queue.pop(-1)\n                if flag and node.right:\n                    stack.append(node.right)\n                if flag and node.left:\n                    stack.append(node.left)\n                if not flag and node.left:\n                    stack.append(node.left)\n                if not flag and node.right:\n                    stack.append(node.right)\n            queue = stack\n            if stack:\n                ans.append([node.val for node in stack])\n            flag = not flag\n        return ans","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}