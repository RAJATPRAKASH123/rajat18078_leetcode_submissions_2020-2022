{"id":443765090,"question_id":1263,"lang":"python3","lang_name":"Python3","time":"4 years, 1 month","timestamp":1610823556,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/443765090/","is_pending":"Not Pending","title":"Number of Dice Rolls With Target Sum","memory":"N/A","code":"class Solution:\n    def numRollsToTarget(self, d: int, f: int, target: int) -> int:\n        \n        # dp = [[[-1 for i in range(d+3)] for j in range(f+3)] for k in range(target+3)] \n        \n        def helper(d, f, target):\n            \n            temp = 0\n            if target < 0 or d < 0:\n                return 0\n            \n            if target == 0 and d == 0:\n                return 1\n            if d == 0:\n                return 0\n            \n            for i in range(1,f+1):\n                # print(temp,f)\n                temp += helper(d-1, f, target-i)\n            return temp\n        \n        return helper(d,f,target)\n\n# class Solution:\n#     def numRollsToTarget(self, d: int, f: int, target: int) -> int:\n        \n#         # dp = [[[-1 for i in range(d+3)] for j in range(f+3)] for k in range(target+3)] \n#         def helper(d, f, target):\n#             if d == 0 and target == 0:\n#                 return 1\n#             if d <= 0 or target <= 0 or f <= 0:\n#                 return 0\n#             return helper(d-1, f, target - f) + helper(d, f-1, target)\n            \n            \n        \n#         return helper(d,f,target)\n\n'''\nfor every (target, d) combination \nfind previous f combinations for d-1 \nand (target-1 to target-f) ka sum\n\nd : dice\nf : face\ntarget\n\n'''","compare_result":"11110000000000000000000000000000000000000000000000000000000000000","title_slug":"number-of-dice-rolls-with-target-sum","has_notes":false,"flag_type":1}