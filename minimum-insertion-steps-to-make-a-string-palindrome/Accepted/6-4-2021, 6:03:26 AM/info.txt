{"id":502668923,"question_id":1437,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1622766806,"status":10,"status_display":"Accepted","runtime":"1320 ms","url":"/submissions/detail/502668923/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"24.8 MB","code":"class Solution:\n    def minInsertions(self, s: str) -> int:\n        dp = [[-1 for i in range(len(s)+1)] for i in range(len(s)+1)]\n        def helper(s, i, j):\n            if i == j:\n                return 0\n            if i > j:\n                return 0\n            if dp[i][j] != -1:\n                return dp[i][j]\n            if s[i] == s[j]:\n                return helper(s, i+1, j-1)\n            temp = min(1 + helper(s, i+1, j), 1 + helper(s, i, j-1))\n            dp[i][j] = temp\n            return temp\n        \n        return helper(s, 0, len(s)-1)","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome","has_notes":false,"flag_type":1}