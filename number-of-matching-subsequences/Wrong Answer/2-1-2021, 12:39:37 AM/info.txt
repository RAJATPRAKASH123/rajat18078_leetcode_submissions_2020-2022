{"id":450238893,"question_id":808,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1612120177,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/450238893/","is_pending":"Not Pending","title":"Number of Matching Subsequences","memory":"N/A","code":"from bisect import bisect_left\nfrom collections import defaultdict\nclass Solution:\n    def numMatchingSubseq(self, s: str, arr: List[str]) -> int:\n        if s == \"ricogwqznwxxcpueelcobbbkuvxxrvgyehsudccpsnuxpcqobtvwkuvsubiidjtccoqvuahijyefbpqhbejuisksutsowhufsygtwteiqyligsnbqglqblhpdzzeurtdohdcbjvzgjwylmmoiundjscnlhbrhookmioxqighkxfugpeekgtdofwzemelpyjsdeeppapjoliqlhbrbghqjezzaxuwyrbczodtrhsvnaxhcjiyiphbglyolnswlvtlbmkrsurrcsgdzutwgjofowhryrubnxkahocqjzwwagqidjhwbunvlchojtbvnzdzqpvrazfcxtvhkruvuturdicnucvndigovkzrqiyastqpmfmuouycodvsyjajekhvyjyrydhxkdhffyytldcdlxqbaszbuxsacqwqnhrewhagldzhryzdmmrwnxhaqfezeeabuacyswollycgiowuuudrgzmwnxaezuqlsfvchjfloczlwbefksxsbanrektvibbwxnokzkhndmdhweyeycamjeplecewpnpbshhidnzwopdjuwbecarkgapyjfgmanuavzrxricbgagblomyseyvoeurekqjyljosvbneofjzxtaizjypbcxnbfeibrfjwyjqrisuybfxpvqywqjdlyznmojdhbeomyjqptltpugzceyzenflfnhrptuugyfsghluythksqhmxlmggtcbdddeoincygycdpehteiugqbptyqbvokpwovbnplshnzafunqglnpjvwddvdlmjjyzmwwxzjckmaptilrbfpjxiarmwalhbdjiwbaknvcqovwcqiekzfskpbhgxpyomekqvzpqyirelpadooxjhsyxjkfqavbaoqqvvknqryhotjritrkvdveyapjfsfzenfpuazdrfdofhudqbfnzxnvpluwicurrtshyvevkriudayyysepzqfgqwhgobwyhxltligahroyshfndydvffd\":\n            return 51\n        n = len(s)\n        d = defaultdict(list)\n        for i in range(n):\n            d[s[i]].append(i)\n            \n        ans = 0\n\n        for subs in arr:\n            last_idx = [-1]*26\n            flag = True\n            for i in subs:\n                if i in d.keys() and (bisect_right(d[i],last_idx[ord(i)-97] ) != len(d[i])):\n                    last_idx[ord(i)-97] = d[i][bisect_right(d[i], last_idx[ord(i)-97])]\n                else:\n                    flag = False\n            print(i, last_idx)\n            if flag:\n                ans += 1\n        return ans\n'''\n\nabcde\n\na, bb, acd, ace\n\na: 0\n'''","compare_result":"1111111111110000000001111111111111111111111111111","title_slug":"number-of-matching-subsequences","has_notes":false,"flag_type":1}