{"id":316414874,"question_id":1014,"lang":"java","lang_name":"Java","time":"4 years, 11 months","timestamp":1585308459,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/316414874/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"49 MB","code":"import java.util.*;\nclass Solution {\n\n    public int[][] kClosest(int[][] points, int K) {\n        Comparator<int[]> cmp = new Comparator<int[]>()\n        {\n            @Override\n            public int compare(int[] a, int[] b){\n                int x = a[0] * a[0] + a[1] * a[1];\n                int y = b[0] * b[0] + b[1] * b[1];\n                return x < y ? -1 : x == y ? 0 : 1;        \n            }  \n        };\n        PriorityQueue<int[]> pq = new PriorityQueue<>(cmp);\n        int[][] r = new int[K][];\n        for ( int i = 0; i < points.length;++i){\n            pq.offer(points[i]);\n        }\n        for ( int i = 0; i < K ;++i){\n            r[i] = pq.poll();\n        }\n        return r;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin","has_notes":false,"flag_type":1}