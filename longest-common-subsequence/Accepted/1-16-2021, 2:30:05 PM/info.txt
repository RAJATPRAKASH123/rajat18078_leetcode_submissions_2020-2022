{"id":443609088,"question_id":1250,"lang":"python3","lang_name":"Python3","time":"4 years, 1 month","timestamp":1610787605,"status":10,"status_display":"Accepted","runtime":"2556 ms","url":"/submissions/detail/443609088/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"115.8 MB","code":"class Solution:\n    def longestCommonSubsequence(self, s: str, t: str) -> int:\n        dp = [[-1 for i in range(1010)] for j in range(1010)]\n        def lcs(s,t,i, j):\n            if i == len(s) or j == len(t):\n                return 0\n            if dp[i][j] != -1:\n                return dp[i][j]\n            \n            if s[i] == t[j]:\n                dp[i][j] = 1 + lcs(s, t, i+1, j+1)\n            else:\n                dp[i][j] = max(lcs(s, t, i+1, j), lcs(s, t, i, j+1))\n            return dp[i][j]\n        \n        return lcs(s, t, 0, 0)\n        \n'''\n\nabcde, ace\nlcs(text1, text2):\n    \n\n'''","compare_result":"1111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}