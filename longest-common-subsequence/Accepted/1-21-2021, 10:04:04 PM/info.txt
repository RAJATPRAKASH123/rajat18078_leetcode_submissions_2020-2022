{"id":445951787,"question_id":1250,"lang":"python3","lang_name":"Python3","time":"4 years, 1 month","timestamp":1611246844,"status":10,"status_display":"Accepted","runtime":"760 ms","url":"/submissions/detail/445951787/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"24.9 MB","code":"class Solution:\n    def longestCommonSubsequence(self, s: str, t: str) -> int:\n        dp = [[ -1 for i in range(len(t))] for j in range(len(s))]\n        def helper(s, t, i, j):\n            if i == -1 or j == -1:\n                return 0\n            if dp[i][j] != -1:\n                return dp[i][j]\n            if s[i] == t[j]:\n                dp[i][j] = 1 + helper(s, t, i-1, j-1)\n                return dp[i][j]\n            else:\n                dp[i][j] = max(helper(s, t, i, j-1), helper(s, t, i-1, j))\n                return dp[i][j]\n        return helper(s, t, len(s)-1, len(t)-1)","compare_result":"1111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}