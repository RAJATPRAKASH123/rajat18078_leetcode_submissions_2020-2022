{"id":460673685,"question_id":1876,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1614288626,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/460673685/","is_pending":"Not Pending","title":"Map of Highest Peak","memory":"N/A","code":"class Solution:\n    def highestPeak(self, isWater: List[List[int]]) -> List[List[int]]:\n        \n        m, n = len(isWater), len(isWater[0])\n        queue = []\n        \n        for i in range(m):\n            for j in range(n):\n                if isWater[i][j] == 1:\n                    queue.append([i,j])\n                    isWater[i][j] = \"first\"\n                    \n        vis = queue[:]\n        val = -1\n        while queue:\n            temp = []\n            val += 1\n            while queue:\n                [i, j] = queue.pop(0)\n                if i < 0 or i >= m or j < 0 or j >= n:\n                    continue\n                if isWater[i][j] == 0:\n                    isWater[i][j] = val\n                    temp.append([i,j+1]);\n                    temp.append([i,j-1])\n                    temp.append([i+1,j]);\n                    temp.append([i-1,j])   \n                if isWater[i][j] == \"first\" and val == 0:\n                    temp.append([i,j+1]);\n                    temp.append([i,j-1])\n                    temp.append([i+1,j]);\n                    temp.append([i-1,j]) \n            queue = temp\n        for i,j in vis:\n            isWater[i][j] = 0\n        return isWater\n        \n'''\n[[1,1,0],\n [0,1,1],\n [1,1,1]]\n'''","compare_result":"11111111111111111111111111111111111111111111000000000000000","title_slug":"map-of-highest-peak","has_notes":false,"flag_type":1}