{"id":453622413,"question_id":310,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1612791820,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/453622413/","is_pending":"Not Pending","title":"Minimum Height Trees","memory":"N/A","code":"from collections import defaultdict\nclass Solution:\n    def findMinHeightTrees(self, n: int, edges: List[List[int]]) -> List[int]:\n        graph = defaultdict(list)\n        for i in edges:\n            graph[i[0]].append(i[1])\n            graph[i[1]].append(i[0])\n            \n        def dfs(i):\n            ans = 0\n            visited.add(i)\n            ans = float('inf')\n            if len(graph[i]) == 0:\n                return 1\n            flag = False\n            for i in graph[i]:\n                if i not in visited:\n                    ans = min(ans, 1 + dfs(i))\n                    flag = True\n            if not flag:\n                return 1\n            return ans\n        \n        all_heights = []\n        for i in range(n):\n            visited = set()\n            all_heights.append(dfs(i))\n        # print(all_heights)\n        temp = min(all_heights)\n        total_mht = []\n        for i in range(n):\n            if all_heights[i] == temp:\n                total_mht += [i]\n        return total_mht\n\n'''\ntree : 0 to n-1\nedges[i] = [ai, bi]\nundirected\n\nresult tree has height : h\n\n\n'''","compare_result":"11111110000000000000000000000000000000000000000000000000000000000000","title_slug":"minimum-height-trees","has_notes":false,"flag_type":1}