{"id":458562653,"question_id":310,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1613866557,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/458562653/","is_pending":"Not Pending","title":"Minimum Height Trees","memory":"N/A","code":"from collections import defaultdict\nclass Solution:\n    def findMinHeightTrees(self, n: int, edges: List[List[int]]) -> List[int]:\n        \n        graph = defaultdict(list)\n        indegree = [0 for i in range(n)]\n        for edge in edges:\n            # Undirected graph\n            graph[edge[0]].append(edge[1])\n            graph[edge[1]].append(edge[0])\n            \n            indegree[edge[0]] += 1\n            indegree[edge[1]] += 1\n\n        visited = [False for i in range(n)]\n        leaves = []\n        for i in range(n):\n            if indegree[i] == 1:\n                leaves.append(i)\n        \n        queue = leaves\n        ans = [[leaves[:]]]\n        while queue:\n            temp = []\n            while queue:\n                cur_node = queue.pop(0)\n                visited[cur_node] = True\n                indegree[cur_node] -= 1\n                for neigh in graph[cur_node]:\n                    if not visited[neigh]:\n                        indegree[neigh] -= 1\n                        if indegree[neigh] == 1:\n                            temp.append(neigh)\n            queue = temp\n            if queue:\n                ans.append(queue[:])\n        return ans[-1]\n        \n            ","compare_result":"11001111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-height-trees","has_notes":false,"flag_type":1}