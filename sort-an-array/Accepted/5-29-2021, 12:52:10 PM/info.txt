{"id":499744817,"question_id":948,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1622272930,"status":10,"status_display":"Accepted","runtime":"904 ms","url":"/submissions/detail/499744817/","is_pending":"Not Pending","title":"Sort an Array","memory":"21.8 MB","code":"class Solution:\n    def sortArray(self, nums: List[int]) -> List[int]:\n        \n        def merge(merged, left, right):\n            # iterators for merged, left, right\n            i, j  = 0, 0\n            count = 0\n            while i < len(left) and j < len(right):\n                if left[i] <= right[j]:\n                    merged[count] = left[i]\n                    i += 1\n                else:\n                    merged[count] = right[j]\n                    j += 1\n                count += 1\n            while i < len(left):\n                merged[count] = left[i]\n                count += 1\n                i += 1\n            while j < len(right):\n                merged[count] = right[j]\n                count += 1\n                j += 1\n            return merged\n        def mergeSort(arr):\n            if len(arr) <= 1:\n                return arr\n            mid = len(arr)//2\n            left = mergeSort(arr[:mid])\n            right = mergeSort(arr[mid:])\n            return merge(arr.copy(), left, right)\n        return mergeSort(nums)","compare_result":"1111111111111","title_slug":"sort-an-array","has_notes":false,"flag_type":1}