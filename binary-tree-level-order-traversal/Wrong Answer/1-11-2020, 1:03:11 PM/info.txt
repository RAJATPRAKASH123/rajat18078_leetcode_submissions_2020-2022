{"id":293157456,"question_id":102,"lang":"java","lang_name":"Java","time":"5 years, 1 month","timestamp":1578727991,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/293157456/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nimport java.util.*;\nclass Solution {\n    public List<List<Integer>> levelOrder(TreeNode root) {\n        List<List<Integer>> lot = new ArrayList<List<Integer>>();\n        Queue<TreeNode> q = new LinkedList<TreeNode>();\n        q.add(root);\n        while ( !q.isEmpty() )\n        {\n            List<Integer> temp = new ArrayList<Integer>();\n            List<TreeNode> temp3 = new ArrayList<TreeNode>();\n            temp.add(root.val);\n            temp3.add(root);\n            while( !q.isEmpty())\n            {\n                TreeNode temp2 = q.remove();\n                if( temp2.left != null )\n                {\n                    q.add(temp2.left);\n                    temp3.add(temp2.left);\n                    temp.add(temp2.left.val);\n                }\n                if ( temp2.right != null )\n                {\n                    q.add(temp2.right);\n                    temp3.add(temp2.right);\n                    temp.add(temp2.right.val);\n                } \n            }\n            lot.add(temp);\n        }\n        return lot;\n    }\n}","compare_result":"0000000000000000000000000000000000","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}