{"id":335680615,"question_id":102,"lang":"python3","lang_name":"Python3","time":"4 years, 9 months","timestamp":1588841438,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/335680615/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrder(self, root: TreeNode) -> List[List[int]]:\n        arr=[[root.val]]\n        queue=[root]\n        if not root:\n            return []\n        while queue:\n            temp_queue=[]\n            temp_queue_val=[]\n            while queue:\n                node = queue.pop(0)\n                if node.left:\n                    temp_queue.append(node.left)\n                    temp_queue_val.append(node.left.val)\n                if node.right:\n                    temp_queue.append(node.right)\n                    temp_queue_val.append(node.right.val)\n            queue = temp_queue\n            if temp_queue_val:\n                arr.append(temp_queue_val)\n            temp_queue,temp_queue_val=[],[]\n        return arr","compare_result":"1000000000000000000000000000000000","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}