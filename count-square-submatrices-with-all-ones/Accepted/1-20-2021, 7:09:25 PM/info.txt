{"id":445476783,"question_id":1402,"lang":"python3","lang_name":"Python3","time":"4 years, 1 month","timestamp":1611149965,"status":10,"status_display":"Accepted","runtime":"1788 ms","url":"/submissions/detail/445476783/","is_pending":"Not Pending","title":"Count Square Submatrices with All Ones","memory":"18.7 MB","code":"class Solution:\n    def countSquares(self, arr: List[List[int]]) -> int:\n        n = len(arr)\n        m = len(arr[0])\n        hor = [[0 for i in range(m+1)] for j in range(n+1)]\n        b_sum = [[0 for i in range(m+1)] for j in range(n+1)]\n        for j in range(1,m+1):\n            for i in range(1,n+1):\n                hor[i][j] = hor[i-1][j] + arr[i-1][j-1]\n        for j in range(1,m+1):\n            for i in range(1,n+1):\n                b_sum[i][j] = hor[i-1][j] + b_sum[i][j-1] + arr[i-1][j-1]\n        # return b_sum\n        count = 0\n        for k in range(1, min(m+1,n+1)):\n            flag = False\n            for j in range(1,m+1):\n                for i in range(1,n+1):\n                    l,u = i-k, j-k\n                    if i-k < 0:\n                        l = 0\n                    if j-k < 0:\n                        u = 0\n                    tt = b_sum[i][j] - b_sum[l][j] - b_sum[i][u] + b_sum[l][u]\n                    if tt == k**2:\n                        flag = True\n                        count += 1\n                    \n                    \n                    # print(tt, i, j , l, u)\n            if not flag:\n                break\n        return count\n'''\n\nreturn \n\n\n\n'''","compare_result":"11111111111111111111111111111111","title_slug":"count-square-submatrices-with-all-ones","has_notes":false,"flag_type":1}