{"id":499371025,"question_id":95,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1622193461,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/499371025/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"15.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def generateTrees(self, n: int) -> List[TreeNode]:\n        \n        def helper(start, end):\n            if start > end:\n                return [None]\n            if start == end:\n                return [TreeNode(start)]\n            res_tree_nodes = []\n            for i in range(start, end+1):\n                left_subtrees = helper(start, i-1)\n                right_subtrees = helper(i+1, end)\n                \n                for left_root in left_subtrees:\n                    for right_root in right_subtrees:\n                        root = TreeNode(i)\n                        root.left = left_root\n                        root.right = right_root\n                        res_tree_nodes.append(root)\n            return res_tree_nodes\n        return helper(1, n)","compare_result":"11111111","title_slug":"unique-binary-search-trees-ii","has_notes":false,"flag_type":1}