{"id":470032683,"question_id":528,"lang":"python3","lang_name":"Python3","time":"3 years, 11 months","timestamp":1616218757,"status":10,"status_display":"Accepted","runtime":"1032 ms","url":"/submissions/detail/470032683/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"48.7 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def swapNodes(self, head: ListNode, k: int) -> ListNode:\n        start_head = head\n        begin = None\n        count = 1\n        k_before = None\n        \n        flag_start = False\n        \n        while head:\n            if count == k:\n                begin = head\n                flag_start = True\n            if flag_start:\n                if k_before is None: \n                    k_before = start_head\n                else:\n                    k_before = k_before.next\n            head = head.next\n            count += 1\n        # print(begin.val, k_before.val)\n        k_before.val, begin.val = begin.val, k_before.val\n        return start_head","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list","has_notes":false,"flag_type":1}