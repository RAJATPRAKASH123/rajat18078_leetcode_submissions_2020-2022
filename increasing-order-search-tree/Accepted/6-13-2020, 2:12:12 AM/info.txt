{"id":352785977,"question_id":933,"lang":"python3","lang_name":"Python3","time":"4 years, 8 months","timestamp":1591994532,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/352785977/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"14 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def increasingBST(self, root: TreeNode) -> TreeNode:\n        if not root:\n            return \n        newRoot = TreeNode(0)\n        temp = newRoot\n        def inorder(root):\n            nonlocal newRoot\n            if root:\n                inorder(root.left)\n                newRoot.right = TreeNode(root.val)\n                newRoot = newRoot.right\n                inorder(root.right)\n        inorder(root)\n        return temp.right","compare_result":"11111111111111111111111111111111111","title_slug":"increasing-order-search-tree","has_notes":false,"flag_type":1}