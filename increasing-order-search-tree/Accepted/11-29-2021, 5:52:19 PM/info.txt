{"id":594417959,"question_id":933,"lang":"python3","lang_name":"Python3","time":"3 years, 2 months","timestamp":1638188539,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/594417959/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"14.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def increasingBST(self, root: TreeNode) -> TreeNode:\n        self.inorder = []\n        rootNew = TreeNode(0)\n        temp = rootNew\n        def inoList(root):\n            nonlocal temp\n            if root:\n                inoList(root.left)\n                temp.right = TreeNode(root.val)\n                temp = temp.right\n                inoList(root.right)\n                \n        inoList(root)\n        return rootNew.right\n'''\nroot\nrearrange\nin-order\nleftmost will become root\n\nno left child\n'''","compare_result":"1111111111111111111111111111111111111","title_slug":"increasing-order-search-tree","has_notes":false,"flag_type":1}