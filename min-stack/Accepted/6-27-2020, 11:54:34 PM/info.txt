{"id":359072456,"question_id":155,"lang":"python3","lang_name":"Python3","time":"4 years, 8 months","timestamp":1593282274,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/359072456/","is_pending":"Not Pending","title":"Min Stack","memory":"17.5 MB","code":"class MinStack:\n\n    def __init__(self):\n        self.stack=[]\n        self.minStack=[]\n        self.mn=float(\"inf\")\n\n\n    def push(self, x: int) -> None:\n        if(x<=self.mn):\n            self.minStack.append(self.mn)\n            self.mn=x\n        self.stack.append(x)\n    def pop(self) -> None:\n        if(self.stack[-1]==self.mn):\n            self.stack.pop()\n            self.mn=self.minStack.pop()\n        else:\n            self.stack.pop()\n\n    def top(self) -> int:\n        # if(stack):\n        return self.stack[-1]\n        # return 0\n\n    def getMin(self) -> int:\n        return self.mn\n\n# Your MinStack object will be instantiated and called as such:\n# obj = MinStack()\n# obj.push(x)\n# obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.getMin()","compare_result":"111111111111111111","title_slug":"min-stack","has_notes":false,"flag_type":1}