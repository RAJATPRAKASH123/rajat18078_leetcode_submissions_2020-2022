{"id":513778501,"question_id":198,"lang":"python3","lang_name":"Python3","time":"3Â years, 8Â months","timestamp":1624771309,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/513778501/","is_pending":"Not Pending","title":"House Robber","memory":"14.4 MB","code":"class Solution:\n    def rob(self, nums: List[int]) -> int:\n        houses = len(nums)\n        if houses == 1:\n            return nums[0]\n        if houses == 2:\n            return max(nums[0], nums[1])\n        dp = [0 for i in range(len(nums))]\n        dp[0] = nums[0]\n        dp[1] = max(nums[0], nums[1])\n        for i in range(2, houses):\n             \n            dp[i] = max(dp[i-1], nums[i] + dp[i-2])\n        return dp[houses-1]\n#         def money(i):\n#             if i == 0:\n#                 return nums[i]\n#             if i < 0:\n#                 return 0\n#             rob_i = money(i-2) + nums[i]\n#             dont_rob_i = money(i-1)\n\n#             return max(rob_i , dont_rob_i)\n#         return money(len(nums)-1)\n        \n'''\namount\n\n\n'''","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber","has_notes":false,"flag_type":1}