{"id":511230003,"question_id":794,"lang":"python3","lang_name":"Python3","time":"3 years, 8 months","timestamp":1624301745,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/511230003/","is_pending":"Not Pending","title":"Swim in Rising Water","memory":"N/A","code":"class Solution:\n    def swimInWater(self, grid: List[List[int]]) -> int:\n        rows, cols = len(grid), len(grid[0])\n        res_time = float('inf')\n        def swim(i=0, j=0, cur_time=0):\n            nonlocal rows, cols, res_time\n\n            if i == rows-1 and j == cols-1 :\n                res_time = min(res_time, cur_time)\n                return\n            moves = [(1,0), (-1,0), (0,1), (0,-1)]\n            for x, y in moves:\n                pos_x = i + x\n                pos_y = j + y\n                if 0 <= pos_x < rows and  0 <= pos_y < cols and grid[pos_x][pos_y] != float('inf'):\n                    temp = grid[i][j]\n                    grid[i][j] = float('inf')\n                    if grid[pos_x][pos_y] == temp or max(grid[pos_x][pos_y], temp) <= cur_time:\n                        swim(pos_x, pos_y, cur_time)\n                    else:\n                        swim(pos_x, pos_y, max(temp, grid[pos_x][pos_y]))\n                    grid[i][j] = temp\n        swim()\n        return res_time","compare_result":"11111111111111110000000000000000000000000","title_slug":"swim-in-rising-water","has_notes":false,"flag_type":1}