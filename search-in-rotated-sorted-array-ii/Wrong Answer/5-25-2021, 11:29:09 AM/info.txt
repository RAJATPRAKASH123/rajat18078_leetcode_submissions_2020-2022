{"id":497933194,"question_id":81,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1621922349,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/497933194/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array II","memory":"N/A","code":"class Solution:\n    def search(self, nums: List[int], target: int) -> bool:\n        \n        def binSearch(nums, target):\n            # find pivot\n            left = 0; right = len(nums)-1\n            while left < right:\n                mid = (left + right)//2\n                if nums[mid] < target:\n                    left = mid + 1\n                else:\n                    right = mid\n            if left >= 0 and left <= len(nums) and nums[left] == target:\n                return True\n        \n        def findPivot(nums):\n            # find pivot\n            left = 0; right = len(nums)-1\n            while left < right:\n                mid = (left + right)//2\n                if nums[0] < nums[mid]:\n                    left = mid + 1\n                else:\n                    right = mid\n            if left == len(nums):\n                return -1\n            return left\n        k = findPivot(nums)\n        print(k)\n        \n        \n        if k == -1:\n            return binSearch(nums, target)\n        elif target == nums[0]:\n            return True\n        elif target > nums[0]:\n            return binSearch(nums[:k], target)\n        else:\n            return binSearch(nums[k:], target)","compare_result":"111011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-in-rotated-sorted-array-ii","has_notes":false,"flag_type":1}