{"id":496598374,"question_id":1747,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1621678956,"status":10,"status_display":"Accepted","runtime":"1896 ms","url":"/submissions/detail/496598374/","is_pending":"Not Pending","title":"Lexicographically Smallest String After Applying Operations","memory":"82.8 MB","code":"class Solution:\n    def findLexSmallestString(self, s: str, a: int, b: int) -> str:\n        visited = set()\n        # s = [int(i) for i in s]\n        s = list(s)\n        def helper(s):\n            # given\n            nonlocal a, b\n            # checking whether visited or not\n            if \"\".join(s) in visited:\n                return\n            \n            visited.add(\"\".join(s))\n            temp_s = s[::]\n            for i in range(len(s)):\n                if i % 2 == 1:\n                    s[i] = str((int(s[i]) + a) % 10)\n            s_add = s[::]\n            s = temp_s\n            s =   s[len(s)-b:] + s[:len(s)-b]\n            s_rotate = s[::]\n            \n            helper(s_add)\n            helper(s_rotate)\n        helper(s)\n        # print(visited)\n        return min(visited)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lexicographically-smallest-string-after-applying-operations","has_notes":false,"flag_type":1}