{"id":454902499,"question_id":49,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1613068044,"status":10,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/454902499/","is_pending":"Not Pending","title":"Group Anagrams","memory":"18 MB","code":"from collections import defaultdict\nclass Solution:\n    def groupAnagrams(self, arr: List[str]) -> List[List[str]]:\n        n = len(arr)\n        letters_word = defaultdict(list)\n        \n        for i in range(len(arr)):\n            letters_word[''.join(sorted(arr[i]))].append(arr[i])\n        return letters_word.values()\n        \n        \n        \n'''\narr : array of strings\n- group the anagrams together\nAnagram : word/phrase formed by rearranging the letters of a different word \n        or phrase, typically using all the original letters exactly once.\n\n\n'''","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}