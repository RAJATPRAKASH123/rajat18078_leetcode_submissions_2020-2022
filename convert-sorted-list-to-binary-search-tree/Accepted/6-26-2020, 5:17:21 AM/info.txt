{"id":358378459,"question_id":109,"lang":"python3","lang_name":"Python3","time":"4 years, 8 months","timestamp":1593128841,"status":10,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/358378459/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"19.8 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def len_ll(self, head):\n        count = 0\n        temp = head\n        while temp:\n            temp = temp.next\n            count += 1\n        return count\n    def sortedListToBST(self, head: ListNode) -> TreeNode:\n        if not head:\n            return None\n        def helper(l, r):\n            nonlocal head\n            m = (l + r)//2\n            if l <= r:\n                left = helper( l, m- 1,)\n                root = TreeNode(head.val)\n                head = head.next\n                right = helper( m + 1, r)\n                root.left = left\n                root.right = right\n                return root\n        return helper(0, self.len_ll(head)-1)","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree","has_notes":false,"flag_type":1}