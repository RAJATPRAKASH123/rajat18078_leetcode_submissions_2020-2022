{"id":356106326,"question_id":1039,"lang":"python3","lang_name":"Python3","time":"4Â years, 8Â months","timestamp":1592654923,"status":10,"status_display":"Accepted","runtime":"780 ms","url":"/submissions/detail/356106326/","is_pending":"Not Pending","title":"Find the Town Judge","memory":"18.2 MB","code":"from collections import defaultdict\nclass Solution:\n    def findJudge(self, N: int, trust: List[List[int]]) -> int:\n        graph = defaultdict(set)\n        graph1 = defaultdict(set)\n        for i in range(len(trust)):\n            # if trust[i][0] in graph:\n            graph[trust[i][1]].add(trust[i][0])\n            graph1[trust[i][0]].add(trust[i][1])\n            # else:\n            #     graph[trust[i][0]] = set(trust[i][1])\n                \n        for i in range(1,N+1):\n            if len(graph[i]) == N-1 and len(graph1[i]) == 0:\n                return i\n        return -1","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-town-judge","has_notes":false,"flag_type":1}