{"id":476318030,"question_id":860,"lang":"python3","lang_name":"Python3","time":"3 years, 10 months","timestamp":1617532765,"status":10,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/476318030/","is_pending":"Not Pending","title":"Design Circular Queue","memory":"15.3 MB","code":"\n\nclass MyCircularQueue:\n    \n    class qNode:\n        def __init__(self, val):\n            self.val = val\n            self.next = None\n\n    def __init__(self, k: int):\n        self.max_size = k\n        self.qlen = 0\n\n    def enQueue(self, value: int) -> bool:\n        if self.qlen == 0:\n            self.head = self.qNode(value) \n            # print(self.head.val)\n            self.head.next = self.head\n            self.last = self.head\n            self.qlen += 1\n            return True\n        if self.qlen < self.max_size:\n            cur = self.qNode(value)\n            self.last.next = cur\n            cur.next = self.head\n            self.head = cur\n            self.qlen += 1\n            return True\n        return False\n            \n            \n    def deQueue(self) -> bool:\n        if self.qlen == 0:\n            return False\n        if self.qlen == 1:\n            self.head = None\n            self.last = None\n            self.qlen -= 1\n            return True\n        cur = self.head\n        while cur.next != self.last:\n            cur = cur.next\n        cur.next = self.head\n        self.last = cur\n        self.qlen -= 1\n        return True\n\n    def Front(self) -> int:\n        if self.qlen == 0:\n            return -1\n        return self.last.val\n\n    def Rear(self) -> int:\n        if self.qlen == 0:\n            return -1\n        return self.head.val\n\n    def isEmpty(self) -> bool:\n        if self.qlen == 0:\n            return True\n        return False\n\n    def isFull(self) -> bool:\n        return self.qlen == self.max_size\n\n\n# Your MyCircularQueue object will be instantiated and called as such:\n# obj = MyCircularQueue(k)\n# param_1 = obj.enQueue(value)\n# param_2 = obj.deQueue()\n# param_3 = obj.Front()\n# param_4 = obj.Rear()\n# param_5 = obj.isEmpty()\n# param_6 = obj.isFull()","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"design-circular-queue","has_notes":false,"flag_type":1}