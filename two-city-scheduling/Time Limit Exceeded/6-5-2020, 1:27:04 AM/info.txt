{"id":349071724,"question_id":1095,"lang":"python3","lang_name":"Python3","time":"4 years, 8 months","timestamp":1591300624,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/349071724/","is_pending":"Not Pending","title":"Two City Scheduling","memory":"N/A","code":"class Solution:\n    def twoCitySchedCost(self, costs: List[List[int]]) -> int:\n        # costs = sorted(costs, key = sum)\n        # ans = 0\n        # count1 = 0\n        # for i in costs:\n        #     ans += min(i[0],i[1])\n        # return ans\n        def helper(costs, l, count1, count2):\n            if l == -1:\n                return 0\n            if count1 == 0:\n                temp = 0\n                for i in range(l, -1, -1):\n                    temp += costs[i][1] \n                return temp\n            if count2 == 0:\n                temp = 0\n                for i in range(l, -1, -1):\n                    temp += costs[i][0] \n                return temp\n            \n            return min(costs[l][0] + helper(costs,l-1, count1 - 1, count2 ),costs[l][1] + helper(costs,l-1, count1, count2 - 1) )\n        return helper(costs, len(costs) - 1,len(costs)//2, len(costs)//2)","compare_result":"1111111111100000000000000000000000000000000000000","title_slug":"two-city-scheduling","has_notes":false,"flag_type":1}