{"id":349068937,"question_id":1095,"lang":"python3","lang_name":"Python3","time":"4 years, 8 months","timestamp":1591300106,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/349068937/","is_pending":"Not Pending","title":"Two City Scheduling","memory":"N/A","code":"class Solution:\n    def twoCitySchedCost(self, costs: List[List[int]]) -> int:\n        # costs = sorted(costs, key = sum)\n        # ans = 0\n        # count1 = 0\n        # for i in costs:\n        #     ans += min(i[0],i[1])\n        # return ans\n        def helper(costs, l):\n            if l == -1:\n                return 0\n            return min(costs[l][0] + helper(costs,l-1),costs[l][1] + helper(costs,l-1) )\n        return helper(costs, len(costs) - 1)","compare_result":"1010000010000000000000000000000000000000000000000","title_slug":"two-city-scheduling","has_notes":false,"flag_type":1}