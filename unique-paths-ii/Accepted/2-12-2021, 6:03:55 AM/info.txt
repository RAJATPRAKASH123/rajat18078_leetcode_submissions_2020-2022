{"id":454998688,"question_id":63,"lang":"python3","lang_name":"Python3","time":"4Â years","timestamp":1613090035,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/454998688/","is_pending":"Not Pending","title":"Unique Paths II","memory":"14.5 MB","code":"class Solution:\n    def uniquePathsWithObstacles(self, arr: List[List[int]]) -> int:\n        # arr : obstacleGrid\n        if arr[0][0] == 1:\n            return 0 \n        m = len(arr); n = len(arr[0]) # m : row, n : column\n        dp = [[0 for i in range(n)] for j in range(m)]\n        for i in range(m):\n            for j in range(n):\n                if arr[i][j] != 1: # i.e. no obstacle\n                    if i == 0 and j == 0:\n                        dp[i][j] = 1\n                    elif i == 0 and arr[i][j-1] != 1 :\n                        dp[i][j] = dp[i][j-1]\n                    elif j == 0 and arr[i-1][j] != 0:\n                        dp[i][j] = dp[i][j-1]\n                    else:\n                        dp[i][j] = dp[i-1][j] + dp[i][j-1]\n        return dp[m-1][n-1]","compare_result":"11111111111111111111111111111111111111111","title_slug":"unique-paths-ii","has_notes":false,"flag_type":1}