{"id":448665376,"question_id":741,"lang":"python3","lang_name":"Python3","time":"4 years, 1 month","timestamp":1611783717,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/448665376/","is_pending":"Not Pending","title":"Cherry Pickup","memory":"N/A","code":"class Solution:\n    def cherryPickup(self, arr: List[List[int]]) -> int:\n        n = len(arr)\n        ith, jth = [0,len(arr)-1],[0,len(arr)-1]\n        dp = [[-1 for i in range(n+2)] for i in range(n+2)]\n        def helper(arr, i, j):\n            if i == len(arr)-1 and j == len(arr)-1:\n                return arr[i][j]\n            if i >= len(arr) or j >= len(arr):\n                return float('-inf')\n            if arr[i][j] == -1:\n                return float('-inf')\n            if dp[i][j] != -1:\n                return dp[i][j]\n            f = helper(arr, i+1, j )\n            s = helper(arr, i, j+1 )\n            \n            if f > s:\n                if i < len(arr)-1 and j < len(arr) and arr[i+1][j] != -1:\n                    ith.append(i+1)\n                    jth.append(j)\n                    dp[i][j] = arr[i][j] + f\n                return dp[i][j] \n            if i < len(arr) and j < len(arr)-1 and arr[i][j+1] != -1:\n                ith.append(i)\n                jth.append(j+1)\n            dp[i][j] = arr[i][j] + s\n            return dp[i][j]\n        ams = helper(arr, 0, 0)\n        for i,j in zip(ith, jth):\n            arr[i][j] = 0\n        # print(arr)\n        dp = [[-1 for i in range(n+2)] for i in range(n+2)]\n        def helper2(arr, i, j):\n            # print(i, j, arr[i][j])\n            if i == 0 and j == 0:\n                return arr[i][j]\n            if i < 0 or j < 0:\n                return float('-inf')\n            if arr[i][j] == -1:\n                return float('-inf')\n            if dp[i][j] != -1:\n                return dp[i][j]\n            f = helper2(arr, i-1, j )\n            s = helper2(arr, i, j-1 )\n            dp[i][j] = arr[i][j] + max(f,s)\n            return dp[i][j]\n        return max(0, ams + helper2(arr,len(arr)-1, len(arr)-1 ) )\n'''\n[[1,1,-1],\n [1,-1,1],\n [-1,1,1]]\n'''","compare_result":"11110001000100110000001110000010001100000000001000001000","title_slug":"cherry-pickup","has_notes":false,"flag_type":1}