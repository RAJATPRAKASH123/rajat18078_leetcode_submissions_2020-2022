{"id":352788143,"question_id":904,"lang":"python3","lang_name":"Python3","time":"4 years, 8 months","timestamp":1591995003,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/352788143/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def leafSimilar(self, root1: TreeNode, root2: TreeNode) -> bool:\n        arr1, arr2 = [],[]\n        def helper(root, arr):\n            if root:\n                helper(root.left, arr)\n                if not root.left and not root.right:\n                    arr.append(root.val)\n                helper(root.right, arr)\n            return arr\n        arr1 = helper(root1, arr1)\n        arr2 = helper(root2, arr2)\n        if arr1 == arr2:\n            return True\n        return False","compare_result":"11111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false,"flag_type":1}