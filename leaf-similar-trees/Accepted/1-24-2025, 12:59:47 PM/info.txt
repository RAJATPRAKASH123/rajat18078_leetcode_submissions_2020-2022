{"id":1518800051,"question_id":904,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1737703787,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1518800051/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"17.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def leafSimilar(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> bool:\n        seq_1, seq_2 = [], []\n        def leafSeq(root, seq):\n            if root:\n                leafSeq(root.left, seq)\n                if not root.left and not root.right:\n                    seq.append(root.val)\n                leafSeq(root.right, seq)\n            return seq\n        if leafSeq(root1, seq_1) == leafSeq(root2, seq_2):\n            return True\n        return False\n        ","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false,"flag_type":1}