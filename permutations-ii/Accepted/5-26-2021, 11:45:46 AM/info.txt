{"id":498410640,"question_id":47,"lang":"python3","lang_name":"Python3","time":"3 years, 9 months","timestamp":1622009746,"status":10,"status_display":"Accepted","runtime":"1052 ms","url":"/submissions/detail/498410640/","is_pending":"Not Pending","title":"Permutations II","memory":"15 MB","code":"from collections import defaultdict\nclass Solution:\n    def permuteUnique(self, nums: List[int]) -> List[List[int]]:\n        nums.sort()\n        res = set()\n        def all_perms( visited = [], cur_res = []):\n            # print(cur_res, visited)\n            if len(visited) == len(nums):\n                res.add(tuple([int( i) for i in cur_res] ))\n                return\n            for i in range(len(nums)):\n                if str(i) not in visited:\n                    # visited.append(str(i))\n                    all_perms(visited.copy() + [str(i)], cur_res.copy() + [str(nums[i])] )\n        all_perms()\n        return list(res)","compare_result":"111111111111111111111111111111111","title_slug":"permutations-ii","has_notes":false,"flag_type":1}